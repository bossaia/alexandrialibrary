<Type Name="Frame" FullName="TagLib.Id3v2.Frame">
  <TypeSignature Language="C#" Value="public abstract class Frame" />
  <AssemblyInfo>
    <AssemblyName>taglib-sharp</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Frame (TagLib.Id3v2.FrameHeader header);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="header" Type="TagLib.Id3v2.FrameHeader" />
      </Parameters>
      <Docs>
        <param name="header">A <see cref="T:TagLib.Id3v2.FrameHeader" /> containing the given frame's header.</param>
        <summary>
          <para>
            Constructs and initializes a new instance of the <see cref="T:TagLib.Id3v2.Frame" /> with a specified header.
          </para>
        </summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextDelimiter">
      <MemberSignature Language="C#" Value="public static TagLib.ByteVector TextDelimiter (TagLib.StringType type);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.ByteVector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="TagLib.StringType" />
      </Parameters>
      <Docs>
        <param name="type">A <see cref="T:TagLib.StringType" /> specifying the encoding to use.</param>
        <summary>Gets the text delimiter for nil separated string lists of a specified encoding.</summary>
        <returns>A <see cref="T:TagLib.ByteVector" /> containing the text delimiter.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FrameId">
      <MemberSignature Language="C#" Value="public TagLib.ReadOnlyByteVector FrameId { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.ReadOnlyByteVector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the four bytes containing the frame's ID.</summary>
        <value>A <see cref="T:TagLib.ByteVector" /> containing four bytes representing the version 4 frame's ID.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public uint Size { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the size of the frame's content since it was last rendered.</summary>
        <value>A <see cref="T:System.UInt32" /> containing the size of the frame minus the header size, since it was last rendered. This will be 0 for newly created frames, the raw data length for freshly read tags, and the data size after <see cref="M:TagLib.Id3v2.Frame.Render(uint)" /> has been called.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptionId">
      <MemberSignature Language="C#" Value="public short EncryptionId { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the ID3v2 encryption ID for the current instance.</summary>
        <value>A <see cref="T:System.Int16" /> representing the encryption ID, or -1 if no group set.</value>
        <remarks>TagLib# currently does not support encryption and setting this will throw an exception.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupId">
      <MemberSignature Language="C#" Value="public short GroupId { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the ID3v2 group ID for the current instance.</summary>
        <value>A <see cref="T:System.Int16" /> representing the group ID, or -1 if no group set.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Frame (TagLib.ByteVector data, byte version);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="data" Type="TagLib.ByteVector" />
        <Parameter Name="version" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="data">A <see cref="T:TagLib.ByteVector" /> containing an ID3v2 frame header.</param>
        <param name="version">A <see cref="T:System.Byte" /> specifying the ID3v2 version the frame is stored in.</param>
        <summary>Constructs and intializes a new instance of <see cref="T:TagLib.Id3v2.Frame" /> from a raw frame header.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public TagLib.Id3v2.FrameFlags Flags { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.Id3v2.FrameFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the frame flags for the current instance.</summary>
        <value>A <see cref="T:TagLib.Id3v2.FrameFlags" /> containing frame flags for the current instance.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public virtual TagLib.ByteVector Render (byte version);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.ByteVector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="version">A <see cref="T:System.Byte" /> specifying which ID3v2 version to use when rendering.</param>
        <summary>Renders the current instance in a specified ID3v2 version.</summary>
        <returns>A <see cref="T:TagLib.ByteVector" /> containing an ID3v2 frame.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="protected void SetData (TagLib.ByteVector data, int offset, byte version, bool readHeader);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="TagLib.ByteVector" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="version" Type="System.Byte" />
        <Parameter Name="readHeader" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="data">A <see cref="T:TagLib.ByteVector" /> containing an ID3v2 frame.</param>
        <param name="offset">A <see cref="T:System.Int32" /> specifying at what index in <paramref name="data" /> the frame begins.</param>
        <param name="version">A <see cref="T:System.Byte" /> specifying the ID3v2 version the frame is stored in.</param>
        <param name="readHeader">A <see cref="T:System.Boolean" /> inidcating whether or not the frame header should be read.</param>
        <summary>Sets the data of the current instance from ID3v2 frame data.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CorrectEncoding">
      <MemberSignature Language="C#" Value="protected static TagLib.StringType CorrectEncoding (TagLib.StringType type, byte version);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.StringType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="TagLib.StringType" />
        <Parameter Name="version" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="type">A <see cref="T:TagLib.StringType" /> specifying the preferred encoding.</param>
        <param name="version">A <see cref="T:System.Byte" /> specifying the ID3v2 version the frame is to be stored in.</param>
        <summary>Converts a preferred encoding into the proper one based on limitations of the ID3v2 version and whether or not <see cref="T:TagLib.Tag.ForceDefaultEncoding" /> is set.</summary>
        <returns>The recommended <see cref="T:TagLib.StringType" /> to use when encoding a string.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FieldData">
      <MemberSignature Language="C#" Value="protected TagLib.ByteVector FieldData (TagLib.ByteVector frameData, int offset, byte version);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.ByteVector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frameData" Type="TagLib.ByteVector" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="version" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="frameData">A <see cref="T:TagLib.ByteVector" /> containing an ID3v2 frame.</param>
        <param name="offset">A <see cref="T:System.Int32" /> specifying at what index in <paramref name="frameData" /> the frame begins.</param>
        <param name="version">A <see cref="T:System.Byte" /> specifying the ID3v2 version the frame is stored in.</param>
        <summary>Parses and extracts the field data from the extra information included in the frame's body.</summary>
        <returns>A <see cref="T:TagLib.ByteVector" /> containing the extracted frame data.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ParseFields">
      <MemberSignature Language="C#" Value="protected abstract void ParseFields (TagLib.ByteVector data, byte version);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="TagLib.ByteVector" />
        <Parameter Name="version" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="data">A <see cref="T:TagLib.ByteVector" /> containing the current instance's field data.</param>
        <param name="version">A <see cref="T:System.Byte" /> specifying the ID3v2 version the frame is stored in.</param>
        <summary>Parses field data to populate frame specific properties.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="RenderFields">
      <MemberSignature Language="C#" Value="protected abstract TagLib.ByteVector RenderFields (byte version);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.ByteVector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="version">A <see cref="T:System.Byte" /> specifying the ID3v2 version the frame is to be stored in.</param>
        <summary>Renders the field data.</summary>
        <returns>A <see cref="T:TagLib.ByteVector" /> containing the current instance's field data.</returns>
        <remarks />
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>This abstract class is used for parsing and rendering ID3v2 frames.</summary>
    <remarks />
  </Docs>
</Type>
