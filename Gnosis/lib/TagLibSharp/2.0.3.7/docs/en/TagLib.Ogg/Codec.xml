<Type Name="Codec" FullName="TagLib.Ogg.Codec">
  <TypeSignature Language="C#" Value="public abstract class Codec : TagLib.ICodec" />
  <AssemblyInfo>
    <AssemblyName>taglib-sharp</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>TagLib.ICodec</InterfaceName>
    </Interface>
  </Interfaces>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Codec ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.Ogg.Codec" />.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetCodec">
      <MemberSignature Language="C#" Value="public static TagLib.Ogg.Codec GetCodec (TagLib.ByteVector packet);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.Ogg.Codec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packet" Type="TagLib.ByteVector" />
      </Parameters>
      <Docs>
        <param name="packet">A <see cref="T:TagLib.ByteVector" /> to be used in type-finding.</param>
        <summary>Finds the appropriate <see cref="T:TagLib.Ogg.Codec" /> to use when processing the bitstream that provided the given packet.</summary>
        <returns>A <see cref="T:TagLib.Ogg.Codec" /> to use when processing the bitstream.</returns>
        <remarks>If not codec is matched, a <see cref="E:TagLib.UnsupportedFormatException" /> is thrown.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCodecProvider">
      <MemberSignature Language="C#" Value="public static void AddCodecProvider (TagLib.Ogg.Codec.CodecProvider provider);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="TagLib.Ogg.Codec+CodecProvider" />
      </Parameters>
      <Docs>
        <param name="provider">A <see cref="T:TagLib.Ogg.Codec+CodecProvider" /> to be used by <see cref="M:TagLib.Ogg.Codec.GetCodec(TagLib.ByteVector)" />.</param>
        <summary>Adds a codec provider to <see cref="M:TagLib.Ogg.Codec.GetCodec(TagLib.ByteVector)" />.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ReadPacket">
      <MemberSignature Language="C#" Value="public abstract bool ReadPacket (TagLib.ByteVector packet, int index);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packet" Type="TagLib.ByteVector" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="packet">A <see cref="T:TagLib.ByteVector" /> to be read.</param>
        <param name="index">A <see cref="T:System.Int32" /> specifying the zero-based index of the provided packet in the stream.</param>
        <summary>Reads a packet and returns whether or not more data needs to be read.</summary>
        <returns>
          <see langword="true" /> if the stream information and Vorbis Comment have been read. Otherwise <see langref="false" />.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetDuration">
      <MemberSignature Language="C#" Value="public abstract TimeSpan GetDuration (long firstGranularPosition, long lastGranularPosition);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstGranularPosition" Type="System.Int64" />
        <Parameter Name="lastGranularPosition" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="firstGranularPosition">A <see cref="T:System.Int64" /> containing the first absolute granular position of the stream.</param>
        <param name="lastGranularPosition">A <see cref="T:System.Int64" /> containing the last absolute granular position of the stream.</param>
        <summary>Gets the duration of the stream represented by the current instance by providing the first and last granular position.</summary>
        <returns>A <see cref="T:System.TimeSpan" /> containing the duration of the current instance.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="MediaTypes">
      <MemberSignature Language="C#" Value="public abstract TagLib.MediaTypes MediaTypes { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.MediaTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the media types contained in the current instance.</summary>
        <value>A <see cref="T:TagLib.MediaTypes" /> containing flags describing what media types are detailed in the current instance.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CommentData">
      <MemberSignature Language="C#" Value="public abstract TagLib.ByteVector CommentData { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.ByteVector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the comment data read by the current instance.</summary>
        <value>A <see cref="T:TagLib.ByteVector" /> containing Vorbis Comment data.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public abstract string Description { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a plain text description of the current instance.</summary>
        <value>A <see cref="T:System.String" /> describing the current instance.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public TimeSpan Duration { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the duration of the current instance.</summary>
        <value>Always <see cref="F:System.TimeSpan.Zero" />.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetCommentPacket">
      <MemberSignature Language="C#" Value="public abstract void SetCommentPacket (TagLib.ByteVectorCollection packets, TagLib.Ogg.XiphComment comment);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packets" Type="TagLib.ByteVectorCollection" />
        <Parameter Name="comment" Type="TagLib.Ogg.XiphComment" />
      </Parameters>
      <Docs>
        <param name="packets">A <see cref="T:TagLib.ByteVectorCollection" /> containing packets for the bitstream using the current instance.</param>
        <param name="comment">A <see cref="T:TagLib.Ogg.XiphComment" /> to store in the packet collection.</param>
        <summary>Stores a Vorbis Comment into the appropriate packet in the stream.</summary>
        <remarks />
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>This abstract class is used for reading codec specific information from OGG packets.</summary>
    <remarks />
  </Docs>
</Type>
