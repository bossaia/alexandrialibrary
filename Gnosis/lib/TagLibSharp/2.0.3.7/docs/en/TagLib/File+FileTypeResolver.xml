<Type Name="File+FileTypeResolver" FullName="TagLib.File+FileTypeResolver">
  <TypeSignature Language="C#" Value="public delegate TagLib.File File.FileTypeResolver(File.IFileAbstraction abstraction, string mimetype, ReadStyle style);" />
  <AssemblyInfo>
    <AssemblyName>taglib-sharp</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="abstraction" Type="TagLib.File+IFileAbstraction" />
    <Parameter Name="mimetype" Type="System.String" />
    <Parameter Name="style" Type="TagLib.ReadStyle" />
  </Parameters>
  <ReturnValue>
    <ReturnType>TagLib.File</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="abstraction">A <see cref="T:TagLib.File+IFileAbstraction" /> representing the file to read.</param>
    <param name="mimetype">A <see cref="T:System.String" /> containing the mime-type of the file.</param>
    <param name="style">A <see cref="T:TagLib.ReadStyle" /> specifying how to read media properties from the file.</param>
    <summary>Intervenes in the <see cref="M:TagLib.File.Create(System.String,TagLib.ReadStyle)" /> method by resolving the file type before any standard resolution operations.</summary>
    <returns>A new <see cref="T:TagLib.File" /> or null.</returns>
    <remarks>
      <para>A <see cref="T:TagLib.File+FileTypeResolver" /> is one way of altering the behavior of <see cref="M:TagLib.File.Create(System.String,TagLib.ReadStyle)" />.</para>
      <para>When <see cref="M:TagLib.File.Create(System.String,TagLib.ReadStyle)" /> is called, the registered resolvers are invoked in the reverse order in which they were registered. The resolver may then perform any operations necessary, including other type-finding methods.</para>
      <para>If the resolver returns a new <see cref="T:TagLib.File" />, it will instantly be returned, by <see cref="M:TagLib.File.Create(System.String,TagLib.ReadStyle)" />. If it returns <see langword="null" />, <see cref="M:TagLib.File.Create(System.String,TagLib.ReadStyle)" /> will continue to process. If the resolver throws an exception it will be uncaught.</para>
      <para>To register a resolver, use <see cref="M:TagLib.File.AddFileTypeResolver(TagLib.File+FileTypeResolver)" />.</para>
    </remarks>
  </Docs>
</Type>
