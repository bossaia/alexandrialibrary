<Type Name="BlockHeader" FullName="TagLib.Flac.BlockHeader">
  <TypeSignature Language="C#" Value="public struct BlockHeader" />
  <AssemblyInfo>
    <AssemblyName>taglib-sharp</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlockHeader (TagLib.ByteVector data);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="data" Type="TagLib.ByteVector" />
      </Parameters>
      <Docs>
        <param name="data">A <see cref="T:TagLib.ByteVector" /> containing a FLAC block header.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.Flac.BlockHeader" /> by reading the contents of a FLACK block header.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlockHeader (TagLib.Flac.BlockType type, uint blockSize);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="type" Type="TagLib.Flac.BlockType" />
        <Parameter Name="blockSize" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="type">A <see cref="T:TagLib.Flac.BlockType" /> specifying the block type of the new instance.</param>
        <param name="blockSize">A <see cref="T:System.UInt32" /> specifying the size of the block data.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.Flac.BlockHeader" /> with a specific type and length.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public TagLib.ByteVector Render (bool isLastBlock);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.ByteVector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isLastBlock" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isLastBlock">A <see cref="T:System.Boolean" /> specifying whether or not the block represented by the current instance is the last in the set.</param>
        <summary>Renders the current instance as a FLAC block header.</summary>
        <returns>A new <see cref="T:TagLib.ByteVector" /> containing the rendered version of the current instance.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="BlockType">
      <MemberSignature Language="C#" Value="public TagLib.Flac.BlockType BlockType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.Flac.BlockType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the block type of the current instance.</summary>
        <value>A <see cref="T:TagLib.Flac.BlockType" /> describing contents of the block represented by the current instance.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="IsLastBlock">
      <MemberSignature Language="C#" Value="public bool IsLastBlock { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether or not the block represented by the current instance.</summary>
        <value>A <see cref="T:System.Boolean" /> containing whether or not the block represented by the current instance.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="BlockSize">
      <MemberSignature Language="C#" Value="public uint BlockSize { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the size of the block data.</summary>
        <value>A <see cref="T:System.UInt32" /> containing the size of the data block.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public const uint Size = 4;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Gets the size of a FLAC metadata block header.</summary>
        <remarks />
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>This struct is used to access FLAC block headers.</summary>
    <remarks />
  </Docs>
</Type>
