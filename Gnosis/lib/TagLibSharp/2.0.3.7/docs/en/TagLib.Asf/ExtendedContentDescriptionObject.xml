<Type Name="ExtendedContentDescriptionObject" FullName="TagLib.Asf.ExtendedContentDescriptionObject">
  <TypeSignature Language="C#" Value="public class ExtendedContentDescriptionObject : TagLib.Asf.Object" />
  <AssemblyInfo>
    <AssemblyName>taglib-sharp</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>TagLib.Asf.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExtendedContentDescriptionObject (TagLib.Asf.File file, long position);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="file" Type="TagLib.Asf.File" />
        <Parameter Name="position" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="file">A <see cref="T:TagLib.Asf.File" /> to read the object data from.</param>
        <param name="position">A <see cref="T:System.Int64" /> specifying where in the file the object begins.</param>
        <summary>Constructs and initialized a new instance of <see cref="T:TagLib.Asf.ExtendedContentDescriptionObject" /> by reading the contents from a file.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExtendedContentDescriptionObject ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <summary>Constructs and initialized a new instance of <see cref="T:TagLib.Asf.ExtendedContentDescriptionObject" /> with no contents.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="RemoveDescriptors">
      <MemberSignature Language="C#" Value="public void RemoveDescriptors (string name);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">A <see cref="T:System.String" /> containing a descriptor name.</param>
        <summary>Removes all <see cref="T:TagLib.Asf.ContentDescriptor" />s from the current instance that have a specific name.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetDescriptors">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TagLib.Asf.ContentDescriptor&gt; GetDescriptors (string[] names);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TagLib.Asf.ContentDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="names" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="names">A <see cref="T:System.String" /> array containing a collection of descriptor names.</param>
        <summary>Gets all <see cref="T:TagLib.Asf.ContentDescriptor" />s in the current instance that match any of a collection of names.</summary>
        <returns>A <see cref="T:System.Collections.Generic.IEnumerable&lt;TagLib.Asf.ContentDescriptor&gt;" /> containing matching descriptors.</returns>
        <remarks>Multiple names are accepted because some descriptors have multiple name possibilities. For example, to access mood, <c>object.GetDescriptors ("WM/Mood", "Mood")</c> would be appropriate. Also, order does not matter and <c>object.GetDescriptors ("Mood", "WM/Mood")</c> will yield the same results.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDescriptor">
      <MemberSignature Language="C#" Value="public void AddDescriptor (TagLib.Asf.ContentDescriptor descriptor);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descriptor" Type="TagLib.Asf.ContentDescriptor" />
      </Parameters>
      <Docs>
        <param name="descriptor">A <see cref="T:TagLib.Asf.ContentDescriptor" /> to add to the current instance.</param>
        <summary>Adds a <see cref="T:TagLib.Asf.ContentDescriptor" /> to the current instance.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetDescriptors">
      <MemberSignature Language="C#" Value="public void SetDescriptors (string name, TagLib.Asf.ContentDescriptor[] descriptors);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="descriptors" Type="TagLib.Asf.ContentDescriptor[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">A <see cref="T:System.String" /> containing a descriptor name.</param>
        <param name="descriptors">A <see cref="T:TagLib.Asf.ContentDescriptor" /> to array to be added to the current instance.</param>
        <summary>Stores a collection of <see cref="T:TagLib.Asf.ContentDescriptor" />s in the current instance, replacing any original values.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether or not the current instance contains values.</summary>
        <value>A <see cref="T:System.Boolean" /> indicating whether or not the current instance contains values.</value>
        <remarks />
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>This class is for reading, writing, and manipulating ASF extended content description objects.</summary>
    <remarks />
  </Docs>
</Type>
