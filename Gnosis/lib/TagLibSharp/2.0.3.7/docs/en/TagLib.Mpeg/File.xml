<Type Name="File" FullName="TagLib.Mpeg.File">
  <TypeSignature Language="C#" Value="public class File : TagLib.NonContainer.File" />
  <AssemblyInfo>
    <AssemblyName>taglib-sharp</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>TagLib.NonContainer.File</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>TagLib.SupportedMimeType("video/mpeg")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>TagLib.SupportedMimeType("video/x-mpg")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>TagLib.SupportedMimeType("taglib/mpv2", "mpv2")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>TagLib.SupportedMimeType("taglib/mpe", "mpe")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>TagLib.SupportedMimeType("taglib/mpeg", "mpeg")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>TagLib.SupportedMimeType("taglib/mpg", "mpg")</AttributeName>
    </Attribute>
  </Attributes>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public File (string path, TagLib.ReadStyle propertiesStyle);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="propertiesStyle" Type="TagLib.ReadStyle" />
      </Parameters>
      <Docs>
        <param name="path">A <see cref="T:System.String" /> specifying the path of the file in the default file system.</param>
        <param name="propertiesStyle">A <see cref="T:TagLib.ReadStyle" /> specifying the detail at which to read the properties.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.Flac.File" /> for a given filename and read style.</summary>
        <remarks>Files should be created using <see cref="M:TagLib.File.Create(System.String,TagLib.ReadStyle)" /> rather than through format specific constructors.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public File (string path);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">A <see cref="T:System.String" /> specifying the path of the file in the default file system.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.Flac.File" /> for a given filename.</summary>
        <remarks>Files should be created using <see cref="M:TagLib.File.Create(System.String)" /> rather than through format specific constructors.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMarker">
      <MemberSignature Language="C#" Value="protected TagLib.Mpeg.Marker GetMarker (long position);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.Mpeg.Marker</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="position">A <see cref="T:System.Int64" /> specifying the seek position to look at.</param>
        <summary>Gets the marker at a specified position in a file.</summary>
        <returns>A <see cref="T:TagLib.Mpeg.Marker" /> specifying the type of marker found.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FindMarker">
      <MemberSignature Language="C#" Value="protected TagLib.Mpeg.Marker FindMarker (ref long position);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.Mpeg.Marker</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int64&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="position">A <see cref="T:System.Int64&amp;" /> specifying the seek position to start looking at.</param>
        <summary>Finds the first marker after a specified position in the file.</summary>
        <returns>A <see cref="T:TagLib.Mpeg.Marker" /> specifying the type of marker found.</returns>
        <remarks>
          <paramref name="position" /> will move to the position at which the header is found.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMarker">
      <MemberSignature Language="C#" Value="protected TagLib.Mpeg.Marker FindMarker (ref long position, TagLib.Mpeg.Marker marker);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.Mpeg.Marker</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int64&amp;" RefType="ref" />
        <Parameter Name="marker" Type="TagLib.Mpeg.Marker" />
      </Parameters>
      <Docs>
        <param name="position">A <see cref="T:System.Int64&amp;" /> specifying the seek position to start looking at.</param>
        <param name="marker">A <see cref="T:TagLib.Mpeg.Marker" /> to search for.</param>
        <summary>Searches for a specific marker after a specifed position in the file.</summary>
        <returns>A <see cref="T:TagLib.Mpeg.Marker" /> specifying the type of marker found.</returns>
        <remarks>
          <paramref name="position" /> will move to the position at which the header is found.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RFindMarker">
      <MemberSignature Language="C#" Value="protected TagLib.Mpeg.Marker RFindMarker (ref long position, TagLib.Mpeg.Marker marker);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.Mpeg.Marker</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int64&amp;" RefType="ref" />
        <Parameter Name="marker" Type="TagLib.Mpeg.Marker" />
      </Parameters>
      <Docs>
        <param name="position">A <see cref="T:System.Int64&amp;" /> specifying the seek position to start looking at.</param>
        <param name="marker">A <see cref="T:TagLib.Mpeg.Marker" /> to search for.</param>
        <summary>Searches for a specific marker before a specifed position in the file.</summary>
        <returns>A <see cref="T:TagLib.Mpeg.Marker" /> specifying the type of marker found.</returns>
        <remarks>
          <paramref name="position" /> will move to the position at which the header is found.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadSystemFile">
      <MemberSignature Language="C#" Value="protected void ReadSystemFile (long position);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="position">A <see cref="T:System.Int64&amp;" /> specifying the seek position to reading.</param>
        <summary>Reads the current instance as an MPEG system file.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public File (TagLib.File.IFileAbstraction abstraction);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="abstraction" Type="TagLib.File+IFileAbstraction" />
      </Parameters>
      <Docs>
        <param name="abstraction">A <see cref="T:TagLib.File+IFileAbstraction" /> providing a file abstraction to use to access the contents.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.Flac.File" /> for a given file abstraction.</summary>
        <remarks>Files should be created using <see cref="M:TagLib.File.Create(TagLib.File.IFileAbstraction)" /> rather than through format specific constructors.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public File (TagLib.File.IFileAbstraction abstraction, TagLib.ReadStyle propertiesStyle);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="abstraction" Type="TagLib.File+IFileAbstraction" />
        <Parameter Name="propertiesStyle" Type="TagLib.ReadStyle" />
      </Parameters>
      <Docs>
        <param name="abstraction">A <see cref="T:TagLib.File+IFileAbstraction" /> providing a file abstraction to use to access the contents.</param>
        <param name="propertiesStyle">A <see cref="T:TagLib.ReadStyle" /> specifying the detail at which to read the properties.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.Flac.File" /> for a given file abstraction and read style.</summary>
        <remarks>Files should be created using <see cref="M:TagLib.File.Create(TagLib.File.IFileAbstraction,TagLib.ReadStyle)" /> rather than through format specific constructors.</remarks>
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>This class is used to access tagging and properties for MPEG-1 and MPEG-2 files.</summary>
    <remarks />
  </Docs>
</Type>
