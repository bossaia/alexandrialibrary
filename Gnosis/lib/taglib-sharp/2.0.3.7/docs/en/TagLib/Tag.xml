<Type Name="Tag" FullName="TagLib.Tag">
  <TypeSignature Language="C#" Value="public abstract class Tag" />
  <AssemblyInfo>
    <AssemblyName>taglib-sharp</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Tag ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.Tag" /> with the default values.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Duplicate">
      <MemberSignature Language="C#" Value="public static void Duplicate (TagLib.Tag source, TagLib.Tag target, bool overwrite);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="TagLib.Tag" />
        <Parameter Name="target" Type="TagLib.Tag" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:TagLib.Tag" /> whose values to copy.</param>
        <param name="target">A <see cref="T:TagLib.Tag" /> to copy values to.</param>
        <param name="overwrite">A <see cref="T:System.Boolean" /> specifying whether or not to override existing values if they are non-zero.</param>
        <summary>Copies values from one tag to another.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public virtual string Title { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the title of the current instance.</summary>
        <value>A <see cref="T:System.String" /> containing the title of the current instance.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AlbumArtists">
      <MemberSignature Language="C#" Value="public virtual string[] AlbumArtists { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the album artists of the current instance.</summary>
        <value>A <see cref="T:System.String" /> array containing the album artists of the current instance.</value>
        <remarks>This is used for the artist who created an album or the main artist of an album. It should be the same for each track in an album.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Performers">
      <MemberSignature Language="C#" Value="public virtual string[] Performers { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the performers of the current instance.</summary>
        <value>A <see cref="T:System.String" /> array containing the performers of the current instance.</value>
        <remarks>The artists appearing in a given track. If the album artist appears in the track, their name should appear here also. Likewise, the main artist should appear first with "featuring" artists appearing afterwords.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Composers">
      <MemberSignature Language="C#" Value="public virtual string[] Composers { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the composers of the current instance.</summary>
        <value>A <see cref="T:System.String" /> array containing the composers of the current instance.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Album">
      <MemberSignature Language="C#" Value="public virtual string Album { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the album of the current instance.</summary>
        <value>A <see cref="T:System.String" /> containing the album of the current instance.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public virtual string Comment { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the comment on the current instance.</summary>
        <value>A <see cref="T:System.String" /> containing the comment on the current instance.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Genres">
      <MemberSignature Language="C#" Value="public virtual string[] Genres { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the genres of the current instance.</summary>
        <value>A <see cref="T:System.String" /> array containing the genres of the current instance.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Year">
      <MemberSignature Language="C#" Value="public virtual uint Year { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the year the current instance was created.</summary>
        <value>A <see cref="T:System.UInt32" /> containing the year the current instance was created.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Track">
      <MemberSignature Language="C#" Value="public virtual uint Track { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the track number the current instance.</summary>
        <value>A <see cref="T:System.UInt32" /> containing the track number the current instance.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="TrackCount">
      <MemberSignature Language="C#" Value="public virtual uint TrackCount { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the number of tracks in the album the current instance is a part of.</summary>
        <value>A <see cref="T:System.UInt32" /> containing the number of tracks in the album the current instance is a part of.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Disc">
      <MemberSignature Language="C#" Value="public virtual uint Disc { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the disc number the current instance.</summary>
        <value>A <see cref="T:System.UInt32" /> containing the disc number the current instance.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="DiscCount">
      <MemberSignature Language="C#" Value="public virtual uint DiscCount { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the number of discs in the album set the current instance is a part of.</summary>
        <value>A <see cref="T:System.UInt32" /> containing the number of discs in the album set the current instance is a part of.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Lyrics">
      <MemberSignature Language="C#" Value="public virtual string Lyrics { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the lyrics of the audio in the current instance.</summary>
        <value>A <see cref="T:System.String" /> containing the lyrics of the audio in the current instance.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Pictures">
      <MemberSignature Language="C#" Value="public virtual TagLib.IPicture[] Pictures { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.IPicture[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the picture collection of the current instance.</summary>
        <value>A <see cref="T:TagLib.IPicture" /> array containing the picture collection of the current instance.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FirstArtist">
      <MemberSignature Language="C#" Value="public string FirstArtist { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the first album artist of the current instance.</summary>
        <value>A <see cref="T:System.String" /> containing a first value in the list of album artists of the current instance.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FirstPerformer">
      <MemberSignature Language="C#" Value="public string FirstPerformer { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the first performer of the current instance.</summary>
        <value>A <see cref="T:System.String" /> containing a first value in the list of performers of the current instance.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FirstComposer">
      <MemberSignature Language="C#" Value="public string FirstComposer { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the first composer of the current instance.</summary>
        <value>A <see cref="T:System.String" /> containing a first value in the list of composers of the current instance.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FirstGenre">
      <MemberSignature Language="C#" Value="public string FirstGenre { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the first genre of the current instance.</summary>
        <value>A <see cref="T:System.String" /> containing a first value in the list of genres of the current instance.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="JoinedArtists">
      <MemberSignature Language="C#" Value="public string JoinedArtists { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the album artists of the current instance.</summary>
        <value>A <see cref="T:System.String" /> containing a comma separated list containing the album artists of the current instance.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="JoinedPerformers">
      <MemberSignature Language="C#" Value="public string JoinedPerformers { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the performers of the current instance.</summary>
        <value>A <see cref="T:System.String" /> containing a comma separated list containing the performers of the current instance.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="JoinedComposers">
      <MemberSignature Language="C#" Value="public string JoinedComposers { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the composers of the current instance.</summary>
        <value>A <see cref="T:System.String" /> containing a comma separated list containing the composers of the current instance.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="JoinedGenres">
      <MemberSignature Language="C#" Value="public string JoinedGenres { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the genres of the current instance.</summary>
        <value>A <see cref="T:System.String" /> containing a comma separated list containing the genres of the current instance.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public virtual bool IsEmpty { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether or not the current instance contains values.</summary>
        <value>A <see cref="T:System.Boolean" /> stating whether or not the current instance contains values.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="BeatsPerMinute">
      <MemberSignature Language="C#" Value="public virtual uint BeatsPerMinute { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the beats per minute of the current instance.</summary>
        <value>A <see cref="T:System.UInt32" /> containing the beats per minute of the current instance.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Conductor">
      <MemberSignature Language="C#" Value="public virtual string Conductor { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the conductor of the current instance.</summary>
        <value>A <see cref="T:System.String" /> containing the conductor of the current instance.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Copyright">
      <MemberSignature Language="C#" Value="public virtual string Copyright { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the copyright information of the current instance.</summary>
        <value>A <see cref="T:System.String" /> containing the copyright information of the current instance.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Grouping">
      <MemberSignature Language="C#" Value="public virtual string Grouping { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the content grouping of the current instance.</summary>
        <value>A <see cref="T:System.String" /> containing the content grouping of the current instance.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="TagTypes">
      <MemberSignature Language="C#" Value="public abstract TagLib.TagTypes TagTypes { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.TagTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the tag types represented by the current instance.</summary>
        <value>A <see cref="T:TagLib.TagTypes" /> containing the tag types represented.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public abstract void Clear ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears the values stored in the current instance.</summary>
        <remarks />
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>An abstract class for accessing standard tag features.</summary>
    <remarks />
  </Docs>
</Type>
