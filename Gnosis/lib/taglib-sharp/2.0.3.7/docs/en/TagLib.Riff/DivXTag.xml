<Type Name="DivXTag" FullName="TagLib.Riff.DivXTag">
  <TypeSignature Language="C#" Value="public class DivXTag : TagLib.Tag" />
  <AssemblyInfo>
    <AssemblyName>taglib-sharp</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>TagLib.Tag</BaseTypeName>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DivXTag ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <summary>Constructs and initialize a new instance of <see cref="T:TagLib.Riff.DivXTag" />.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DivXTag (TagLib.Riff.File file, long position);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="file" Type="TagLib.Riff.File" />
        <Parameter Name="position" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="file">A <see cref="T:TagLib.Riff.File" /> to read from.</param>
        <param name="position">A <see cref="T:System.Int64" /> specifying at what seek position to start reading.</param>
        <summary>Constructs and initialize a new instance of <see cref="T:TagLib.Riff.DivXTag" /> by reading if from a file.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public const uint Size = 128;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <MemberValue>128</MemberValue>
      <Docs>
        <summary>Gets the size of a DivX tag.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public TagLib.ByteVector Render ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.ByteVector</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Renders the current instance as a DivX tag.</summary>
        <returns>A <see cref="T:TagLib.ByteVector" /> containing a rendered version of the current instance.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FileIdentifier">
      <MemberSignature Language="C#" Value="public static readonly TagLib.ReadOnlyByteVector FileIdentifier;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.ReadOnlyByteVector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the identifier used for finding DivX tags in a file.</summary>
        <remarks>Always "DIVXTAG".</remarks>
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>This class is used to access and manipulate tags stored in the DivX tagging format.</summary>
    <remarks>This class is analogous to the ID3v1 tagging format.</remarks>
  </Docs>
</Type>
