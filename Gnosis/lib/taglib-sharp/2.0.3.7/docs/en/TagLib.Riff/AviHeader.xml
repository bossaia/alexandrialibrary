<Type Name="AviHeader" FullName="TagLib.Riff.AviHeader">
  <TypeSignature Language="C#" Value="public struct AviHeader" />
  <AssemblyInfo>
    <AssemblyName>taglib-sharp</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AviHeader (TagLib.ByteVector data, int offset);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="data" Type="TagLib.ByteVector" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">A <see cref="T:TagLib.ByteVector" /> containing an AVI header structure.</param>
        <param name="offset">A <see cref="T:System.Int32" /> specifying at what position in the data the structure begins.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.Riff.AviHeader" /> by reading it from an AVI header structure.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="MicrosecondsPerFrame">
      <MemberSignature Language="C#" Value="public uint MicrosecondsPerFrame { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of microseconds per frame in the current instance.</summary>
        <value>A <see cref="T:System.UInt32" /> containing the number of microseconds per frame.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="MaxBytesPerSecond">
      <MemberSignature Language="C#" Value="public uint MaxBytesPerSecond { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the maximum bytes per second in the current instance.</summary>
        <value>A <see cref="T:System.UInt32" /> containing the maximum bytes per second.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public uint Flags { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the flags in the current instance.</summary>
        <value>A <see cref="T:System.UInt32" /> containing the flags.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="TotalFrames">
      <MemberSignature Language="C#" Value="public uint TotalFrames { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the total number of frames in the current instance.</summary>
        <value>A <see cref="T:System.UInt32" /> containing the total number of frames.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="InitialFrames">
      <MemberSignature Language="C#" Value="public uint InitialFrames { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of initial frames in the current instance.</summary>
        <value>A <see cref="T:System.UInt32" /> containing the number of initial frames.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Streams">
      <MemberSignature Language="C#" Value="public uint Streams { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of streams in the current instance.</summary>
        <value>A <see cref="T:System.UInt32" /> containing the number of streams.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SuggestedBufferSize">
      <MemberSignature Language="C#" Value="public uint SuggestedBufferSize { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the suggested buffer size for the current instance.</summary>
        <value>A <see cref="T:System.UInt32" /> containing the suggested buffer size.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public uint Width { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the width of the current instance.</summary>
        <value>A <see cref="T:System.UInt32" /> containing the width.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public uint Height { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the height of the current instance.</summary>
        <value>A <see cref="T:System.UInt32" /> containing the height.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AviHeader (TagLib.ByteVector data);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="data" Type="TagLib.ByteVector" />
      </Parameters>
      <Docs>
        <param name="data">A <see cref="T:TagLib.ByteVector" /> containing an AVI header structure.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.Riff.AviHeader" /> by reading it from an AVI header structure.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public TimeSpan Duration { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the duration of the current instance.</summary>
        <value>A <see cref="T:System.TimeSpan" /> containing the length of the stream represented by the current instance.</value>
        <remarks />
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>This structure is used to access AVI header structures.</summary>
    <remarks />
  </Docs>
</Type>
