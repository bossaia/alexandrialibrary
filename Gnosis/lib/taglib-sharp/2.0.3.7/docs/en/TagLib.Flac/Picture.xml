<Type Name="Picture" FullName="TagLib.Flac.Picture">
  <TypeSignature Language="C#" Value="public class Picture : TagLib.IPicture" />
  <AssemblyInfo>
    <AssemblyName>taglib-sharp</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>TagLib.IPicture</InterfaceName>
    </Interface>
  </Interfaces>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Picture (TagLib.ByteVector data);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="data" Type="TagLib.ByteVector" />
      </Parameters>
      <Docs>
        <param name="data">A <see cref="T:TagLib.ByteVector" /> containing a FLAC picture structue.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.Flac.Picture" /> from a FLAC picture structure.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public TagLib.PictureType Type { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.PictureType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the picture type for the current instance.</summary>
        <value>A <see cref="T:TagLib.PictureType" /> describing the image content.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="MimeType">
      <MemberSignature Language="C#" Value="public string MimeType { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the mime-type of the data in the current instance.</summary>
        <value>A <see cref="T:System.String" /> containing the mime-type of the data in the current instance.</value>
        <remarks>The mime type should start with "image/" and will most likely be "image/png" or "image/jpeg".</remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets a description of the current instance.</summary>
        <value>A <see cref="T:System.String" /> describing the current instance.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public int Width { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the width the current instance.</summary>
        <value>A <see cref="T:TagLib.ByteVector" /> containing width.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public int Height { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the height the current instance.</summary>
        <value>A <see cref="T:TagLib.ByteVector" /> containing height.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ColorDepth">
      <MemberSignature Language="C#" Value="public int ColorDepth { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the color depth for the current instance.</summary>
        <value>A <see cref="T:TagLib.ByteVector" /> containing color depth.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="IndexedColors">
      <MemberSignature Language="C#" Value="public int IndexedColors { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the number of indexed colors for the current instance.</summary>
        <value>A <see cref="T:TagLib.ByteVector" /> containing number of indexed colors.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public TagLib.ByteVector Data { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.ByteVector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the image data for the current instance.</summary>
        <value>A <see cref="T:TagLib.ByteVector" /> containing image data.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Picture (TagLib.IPicture picture);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="picture" Type="TagLib.IPicture" />
      </Parameters>
      <Docs>
        <param name="picture">A <see cref="T:TagLib.IPicture" /> with values to copy.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.Flac.Picture" /> by copyings values from a <see cref="T:TagLib.IPicture" />.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public TagLib.ByteVector Render ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.ByteVector</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Renders the current instance as FLAC picture structure.</summary>
        <returns>A <see cref="T:TagLib.ByteVector" /> containing the rendered version.</returns>
        <remarks />
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>This class is used to access and manipulate pictures stored in FLAC files.</summary>
    <remarks />
  </Docs>
</Type>
