<Type Name="File" FullName="TagLib.NonContainer.File">
  <TypeSignature Language="C#" Value="public abstract class File : TagLib.File" />
  <AssemblyInfo>
    <AssemblyName>taglib-sharp</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>TagLib.File</BaseTypeName>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected File (string path, TagLib.ReadStyle propertiesStyle);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="propertiesStyle" Type="TagLib.ReadStyle" />
      </Parameters>
      <Docs>
        <param name="path">A <see cref="T:System.String" /> specifying the path of the file in the default file system.</param>
        <param name="propertiesStyle">A <see cref="T:TagLib.ReadStyle" /> specifying the detail at which to read the properties.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.NonContainer.File" /> for a given filename and read style.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected File (string path);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">A <see cref="T:System.String" /> specifying the path of the file in the default file system.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.NonContainer.File" /> for a given filename.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ReadStart">
      <MemberSignature Language="C#" Value="protected virtual void ReadStart (long start, TagLib.ReadStyle propertiesStyle);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int64" />
        <Parameter Name="propertiesStyle" Type="TagLib.ReadStyle" />
      </Parameters>
      <Docs>
        <param name="start">A <see cref="T:System.Int64" /> containing the seek position at which tagging ends at the beginning of the file.</param>
        <param name="propertiesStyle">A <see cref="T:TagLib.ReadStyle" /> specifying the detail at which to read the properties.</param>
        <summary>Reads format specific information at the start of the file.</summary>
        <remarks>This method is ALWAYS called by the constructor immediately after the tags at the beginning of the file are read. It should be used for reading content specific information and properties.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadEnd">
      <MemberSignature Language="C#" Value="protected virtual void ReadEnd (long end, TagLib.ReadStyle propertiesStyle);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="end" Type="System.Int64" />
        <Parameter Name="propertiesStyle" Type="TagLib.ReadStyle" />
      </Parameters>
      <Docs>
        <param name="end">A <see cref="T:System.Int64" /> containing the seek position at which tagging begins at the end of the file.</param>
        <param name="propertiesStyle">A <see cref="T:TagLib.ReadStyle" /> specifying the detail at which to read the properties.</param>
        <summary>Reads format specific information at the end of the file.</summary>
        <remarks>This method is ALWAYS called by the constructor immediately after the tags at the end of the file are read. It should be used for reading content specific information and properties.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadProperties">
      <MemberSignature Language="C#" Value="protected abstract TagLib.Properties ReadProperties (long start, long end, TagLib.ReadStyle propertiesStyle);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.Properties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int64" />
        <Parameter Name="end" Type="System.Int64" />
        <Parameter Name="propertiesStyle" Type="TagLib.ReadStyle" />
      </Parameters>
      <Docs>
        <param name="start">A <see cref="T:System.Int64" /> containing the seek position at which tagging ends at the beginning of the file.</param>
        <param name="end">A <see cref="T:System.Int64" /> containing the seek position at which tagging begins at the end of the file.</param>
        <param name="propertiesStyle">A <see cref="T:TagLib.ReadStyle" /> specifying the detail at which to read the properties.</param>
        <summary>Reads the media properties contained in the current instance.</summary>
        <returns>A <see cref="T:TagLib.Properties" /> containing the media properties for the current instance.</returns>
        <remarks>This is only called IF the read style used for the file IS NOT <see cref="F:TagLib.ReadStyle.None" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartTag">
      <MemberSignature Language="C#" Value="protected TagLib.NonContainer.StartTag StartTag { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.NonContainer.StartTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the tag collection at the start of the file represented by the current instance.</summary>
        <value>A <see cref="T:TagLib.NonContainer.StartTag" /> containing the collection of that at the start of the file.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="EndTag">
      <MemberSignature Language="C#" Value="protected TagLib.NonContainer.EndTag EndTag { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.NonContainer.EndTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the tag collection at the end of the file represented by the current instance.</summary>
        <value>A <see cref="T:TagLib.NonContainer.EndTag" /> containing the collection of that at the end of the file.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected File (TagLib.File.IFileAbstraction abstraction);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="abstraction" Type="TagLib.File+IFileAbstraction" />
      </Parameters>
      <Docs>
        <param name="abstraction">A <see cref="T:TagLib.File+IFileAbstraction" /> providing a file abstraction to use to access the contents.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.NonContainer.File" /> for a given file abstraction.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected File (TagLib.File.IFileAbstraction abstraction, TagLib.ReadStyle propertiesStyle);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="abstraction" Type="TagLib.File+IFileAbstraction" />
        <Parameter Name="propertiesStyle" Type="TagLib.ReadStyle" />
      </Parameters>
      <Docs>
        <param name="abstraction">A <see cref="T:TagLib.File+IFileAbstraction" /> providing a file abstraction to use to access the contents.</param>
        <param name="propertiesStyle">A <see cref="T:TagLib.ReadStyle" /> specifying the detail at which to read the properties.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.NonContainer.File" /> for a given file abstraction and read style.</summary>
        <remarks />
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>This abstract class is used to access tagging and properties for files which contain an indeterminite number and type of tags at their beginning or end.</summary>
    <remarks />
  </Docs>
</Type>
