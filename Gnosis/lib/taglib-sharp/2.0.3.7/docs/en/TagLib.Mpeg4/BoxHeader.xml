<Type Name="BoxHeader" FullName="TagLib.Mpeg4.BoxHeader">
  <TypeSignature Language="C#" Value="public struct BoxHeader" />
  <AssemblyInfo>
    <AssemblyName>taglib-sharp</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BoxHeader (TagLib.File file, long position);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="file" Type="TagLib.File" />
        <Parameter Name="position" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="file">A <see cref="T:TagLib.Mpeg4.File" /> to read from.</param>
        <param name="position">A <see cref="T:System.Int64" /> containing the seek position to read at.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.Mpeg4.BoxHeader" /> by reading it from a file.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BoxHeader (TagLib.ByteVector type);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="type" Type="TagLib.ByteVector" />
      </Parameters>
      <Docs>
        <param name="type">A <see cref="T:TagLib.ByteVector" /> specifying the type of the new instance.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.Mpeg4.BoxHeader" /> with a specified type.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BoxHeader (TagLib.ByteVector type, TagLib.ByteVector extendedType);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="type" Type="TagLib.ByteVector" />
        <Parameter Name="extendedType" Type="TagLib.ByteVector" />
      </Parameters>
      <Docs>
        <param name="type">A <see cref="T:TagLib.ByteVector" /> specifying the type of the new instance.</param>
        <param name="extendedType">A <see cref="T:TagLib.ByteVector" /> containing the extended type of the new instance, or <see langref="null" /> if not "uuid".</param>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.Mpeg4.BoxHeader" /> with a specified type and extended type.</summary>
        <remarks>Boxed of type "uuid", and only those boxes, must have a 16 byte extended type.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public TagLib.ByteVector Render ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.ByteVector</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Renders the current instance as a box header.</summary>
        <returns>A <see cref="T:TagLib.ByteVector" /> containing the rendered version of the current instance.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="BoxType">
      <MemberSignature Language="C#" Value="public TagLib.ByteVector BoxType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.ByteVector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the type box represented by the current instance.</summary>
        <value>A <see cref="T:TagLib.ByteVector" /> containing the box type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ExtendedType">
      <MemberSignature Language="C#" Value="public TagLib.ByteVector ExtendedType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.ByteVector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the extended type of the current instance.</summary>
        <value>A <see cref="T:TagLib.ByteVector" /> containing the extended type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="HeaderSize">
      <MemberSignature Language="C#" Value="public long HeaderSize { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the size of the header.</summary>
        <value>A <see cref="T:System.Int64" /> containing the header size.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="DataSize">
      <MemberSignature Language="C#" Value="public long DataSize { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the size of the box data.</summary>
        <value>A <see cref="T:System.Int64" /> containing the data size.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="DataOffset">
      <MemberSignature Language="C#" Value="public long DataOffset { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the offset of the box data.</summary>
        <value>A <see cref="T:System.Int64" /> specifying the seek position at which the data starts.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="TotalBoxSize">
      <MemberSignature Language="C#" Value="public long TotalBoxSize { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the total size of the box.</summary>
        <value>A <see cref="T:System.Int64" /> containing the total box size.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public long Position { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the seek position of the header on the disk.</summary>
        <value>A <see cref="T:System.Int64" /> containing the seek position.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly TagLib.Mpeg4.BoxHeader Empty;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.Mpeg4.BoxHeader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an empty box header.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Overwrite">
      <MemberSignature Language="C#" Value="public long Overwrite (TagLib.File file, long sizeChange);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="TagLib.File" />
        <Parameter Name="sizeChange" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="file">The <see cref="T:TagLib.File" /> containing the current instance.</param>
        <param name="sizeChange">A <see cref="T:System.Int64" /> specifying the change in size in the box containing the current instance.</param>
        <summary>Overwrites the current instance on disk, applying a size change.</summary>
        <returns>A <see cref="T:System.Int64" /> indicating the size change after the header has been written to disk.</returns>
        <remarks>If the header changes from having a short size to a long size, the header size will change.</remarks>
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>This struct provides access to headers for ISO/IEC 14496-12 boxes.</summary>
    <remarks />
  </Docs>
</Type>
