<Type Name="Tag" FullName="TagLib.Id3v1.Tag">
  <TypeSignature Language="C#" Value="public class Tag : TagLib.Tag" />
  <AssemblyInfo>
    <AssemblyName>taglib-sharp</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>TagLib.Tag</BaseTypeName>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Tag ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.Id3v1.Tag" />.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Tag (TagLib.File file, long position);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="file" Type="TagLib.File" />
        <Parameter Name="position" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="file">A <see cref="T:TagLib.File" /> containing a tag to read.</param>
        <param name="position">A <see cref="T:System.Int64" /> specifying at what seek position to start reading.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.Id3v1.Tag" /> by reading one from a specified file.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public const uint Size = 128;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <MemberValue>128</MemberValue>
      <Docs>
        <summary>Gets the size of an ID3v1 tag.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public TagLib.ByteVector Render ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.ByteVector</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Renders the current instance as an ID3v1 tag.</summary>
        <returns>A <see cref="T:TagLib.ByteVector" /> containing the rendered version.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="DefaultStringHandler">
      <MemberSignature Language="C#" Value="public static TagLib.Id3v1.StringHandler DefaultStringHandler { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.Id3v1.StringHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Sets the string handler to use when reading and writing string fields.</summary>
        <value>A <see cref="T:TagLib.Id3v1.StringHandler" /> to use.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FileIdentifier">
      <MemberSignature Language="C#" Value="public static readonly TagLib.ReadOnlyByteVector FileIdentifier;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.ReadOnlyByteVector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the identifier used for finding ID3v1 tags in a file.</summary>
        <remarks>Always "TAG".</remarks>
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>This class is used to access and manipulate tags stored in the ID3v1 tagging format.</summary>
    <remarks />
  </Docs>
</Type>
