<Type Name="Tag" FullName="TagLib.Id3v2.Tag">
  <TypeSignature Language="C#" Value="public class Tag : TagLib.Tag, System.Collections.Generic.IEnumerable&lt;TagLib.Id3v2.Frame&gt;" />
  <AssemblyInfo>
    <AssemblyName>taglib-sharp</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>TagLib.Tag</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;TagLib.Id3v2.Frame&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Tag ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.Id3v2.Tag" /> with no contents.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Tag (TagLib.File file, long position);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="file" Type="TagLib.File" />
        <Parameter Name="position" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="file">A <see cref="T:TagLib.File" /> containing a tag to read.</param>
        <param name="position">A <see cref="T:System.Int64" /> specifying at what seek position to start reading.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.Id3v2.Tag" /> by reading the contents from a file..</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetFrames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TagLib.Id3v2.Frame&gt; GetFrames ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TagLib.Id3v2.Frame&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets all the frames from the current instance.</summary>
        <returns>A <see cref="T:System.Collections.Generic.IEnumerable&lt;TagLib.Id3v2.Frame&gt;" /> containing all frames contained within the current instance.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetFrames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TagLib.Id3v2.Frame&gt; GetFrames (TagLib.ByteVector id);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TagLib.Id3v2.Frame&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="TagLib.ByteVector" />
      </Parameters>
      <Docs>
        <param name="id">A <see cref="T:TagLib.ByteVector" /> containing an ID3v2.4 frame ID.</param>
        <summary>Gets all the frames of a specified type from the current instance.</summary>
        <returns>A <see cref="T:System.Collections.Generic.IEnumerable&lt;TagLib.Id3v2.Frame&gt;" /> containing all the frames of a specified type contained within the current instance.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AddFrame">
      <MemberSignature Language="C#" Value="public void AddFrame (TagLib.Id3v2.Frame frame);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frame" Type="TagLib.Id3v2.Frame" />
      </Parameters>
      <Docs>
        <param name="frame">A <see cref="T:TagLib.Id3v2.Frame" /> to add to the current instance.</param>
        <summary>Adds a frame to the current instance.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ReplaceFrame">
      <MemberSignature Language="C#" Value="public void ReplaceFrame (TagLib.Id3v2.Frame oldFrame, TagLib.Id3v2.Frame newFrame);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldFrame" Type="TagLib.Id3v2.Frame" />
        <Parameter Name="newFrame" Type="TagLib.Id3v2.Frame" />
      </Parameters>
      <Docs>
        <param name="oldFrame">A <see cref="T:TagLib.Id3v2.Frame" /> to remove.</param>
        <param name="newFrame">A <see cref="T:TagLib.Id3v2.Frame" /> to add.</param>
        <summary>Replaces one frame with another in the current instance.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="RemoveFrame">
      <MemberSignature Language="C#" Value="public void RemoveFrame (TagLib.Id3v2.Frame frame);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frame" Type="TagLib.Id3v2.Frame" />
      </Parameters>
      <Docs>
        <param name="frame">A <see cref="T:TagLib.Id3v2.Frame" /> to remove from the current instance.</param>
        <summary>Removes a frame from the current instance.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="RemoveFrames">
      <MemberSignature Language="C#" Value="public void RemoveFrames (TagLib.ByteVector id);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="TagLib.ByteVector" />
      </Parameters>
      <Docs>
        <param name="id">A <see cref="T:TagLib.ByteVector" /> containing the ID of frames to remove from the current instance.</param>
        <summary>Removes all frames of a given type from the current instance.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public TagLib.ByteVector Render ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.ByteVector</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Renders the current instance as an ID3v2 frame.</summary>
        <returns>A <see cref="T:TagLib.ByteVector" /> containing the rendered tag.</returns>
        <remarks>By default, tags will be rendered in the version they were loaded in, and new tags in <see cref="P:TagLib.Id3v2.Tag.DefaultVersion" />. If <see cref="T:TagLib.Id3v2.Tag.ForceDefaultVersion" /> is <see langword="true" />, all tags will be rendered in <see cref="P:TagLib.Id3v2.Tag.DefaultVersion" />, except for tags with footers, which must be in version 4.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="protected void Parse (TagLib.ByteVector data);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="TagLib.ByteVector" />
      </Parameters>
      <Docs>
        <param name="data">A <see cref="T:TagLib.ByteVector" /> containing an ID3v2 tag.</param>
        <summary>Populates the current instance by reading tag data.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetNumberFrame">
      <MemberSignature Language="C#" Value="public void SetNumberFrame (TagLib.ByteVector id, uint number, uint count);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="TagLib.ByteVector" />
        <Parameter Name="number" Type="System.UInt32" />
        <Parameter Name="count" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="id">A <see cref="T:TagLib.ByteVector" /> containing an ID3v2.4 frame ID.</param>
        <param name="number">A <see cref="T:System.UInt32" />.</param>
        <param name="count">A <see cref="T:System.UInt32" /> representing a total which <paramref name="number" /> is a part of, or zero if <paramref name="number" /> is not part of a set.</param>
        <summary>Sets a numeric value in an ID3v2 text frame with a given ID.</summary>
        <remarks>If both <paramref name="number" /> and <paramref name="count" /> are equal to zero, the value will be cleared. If <paramref name="count" /> is zero, <paramref name="number" /> by itself will be stored. Otherwise, the values will be stored as "<paramref name="number" />/<paramref name="count" />".</remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public static string Language { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the ISO-639-2 language code to use when searching for and storing language specific values.</summary>
        <value>A <see cref="T:System.String" /> containing an ISO-639-2 language code fto use when searching for and storing language specific values.</value>
        <remarks>If the language is unknown, "XXX" is the appropriate filler.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public byte Version { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the ID3v2 version of the current instance.</summary>
        <value>A <see cref="T:System.Byte" /> specifying an ID3v2 version.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="DefaultVersion">
      <MemberSignature Language="C#" Value="public static byte DefaultVersion { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the the default version to use when creating new tags.</summary>
        <value>A <see cref="T:System.Byte" /> specifying an ID3v2 version.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ForceDefaultVersion">
      <MemberSignature Language="C#" Value="public static bool ForceDefaultVersion { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets whether or not to force all tags to be rendered in the default version.</summary>
        <value>A <see cref="T:System.Boolean" /> specifying whether or not to force all tags to be rendered in the default version.</value>
        <remarks>When <see langword="true" />, all tags will be rendered in the default version, except tags with footers, which need to be rendered in the ID3v2.4 format.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultEncoding">
      <MemberSignature Language="C#" Value="public static TagLib.StringType DefaultEncoding { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.StringType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the text encoding to use when creating new frames.</summary>
        <value>A <see cref="T:TagLib.StringType" /> specifying the text encoding to use when creating new frames.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ForceDefaultEncoding">
      <MemberSignature Language="C#" Value="public static bool ForceDefaultEncoding { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets whether or not to force all text to be rendered in the default encoding.</summary>
        <value>A <see cref="T:System.Boolean" /> specifying whether or not to force all text to be rendered in the default encoding.</value>
        <remarks>When <see langword="true" />, all text will be rendered in the default encoding.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="protected void Read (TagLib.File file, long position);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="TagLib.File" />
        <Parameter Name="position" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="file">A <see cref="T:TagLib.File" /> containing a tag to read.</param>
        <param name="position">A <see cref="T:System.Int64" /> specifying at what seek position to start reading.</param>
        <summary>Populates the current instance with data read from a specified file.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public TagLib.Id3v2.HeaderFlags Flags { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.Id3v2.HeaderFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the flags applied to the current instance.</summary>
        <value>A <see cref="T:TagLib.Id3v2.HeaderFlacs" /> containing the flags.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetTextFrame">
      <MemberSignature Language="C#" Value="public void SetTextFrame (TagLib.ByteVector id, string[] value);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="TagLib.ByteVector" />
        <Parameter Name="value" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="id">A <see cref="T:TagLib.ByteVector" /> containing an ID3v2.4 frame ID.</param>
        <param name="value">A <see cref="T:System.String" /> array containing values to store.</param>
        <summary>Stores a text value in and ID3v2 text frame with a given ID.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetTextFrame">
      <MemberSignature Language="C#" Value="public void SetTextFrame (TagLib.ByteVector id, TagLib.StringCollection value);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="TagLib.ByteVector" />
        <Parameter Name="value" Type="TagLib.StringCollection" />
      </Parameters>
      <Docs>
        <param name="id">A <see cref="T:TagLib.ByteVector" /> containing an ID3v2.4 frame ID.</param>
        <param name="value">A <see cref="T:TagLib.StringCollection" /> containing values to store.</param>
        <summary>Stores a text value in and ID3v2 text frame with a given ID.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;TagLib.Id3v2.Frame&gt; GetEnumerator ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;TagLib.Id3v2.Frame&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the enumerator for the current instance.</summary>
        <returns>A <see cref="T:System.Collections.Generic.IEnumerator&lt;TagLib.Id3v2.Frame&gt;" /> enumerating through the frames contained in the current instance.</returns>
        <remarks />
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>This class is used to access and manipulate tags stored in the ID3v2 tagging format.</summary>
    <remarks />
  </Docs>
</Type>
