<Type Name="RelativeVolumeFrame" FullName="TagLib.Id3v2.RelativeVolumeFrame">
  <TypeSignature Language="C#" Value="public class RelativeVolumeFrame : TagLib.Id3v2.Frame" />
  <AssemblyInfo>
    <AssemblyName>taglib-sharp</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>TagLib.Id3v2.Frame</BaseTypeName>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelativeVolumeFrame (string identification);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="identification" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identification">A <see cref="T:System.String" /> specifying the identifier.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.Id3v2.RelativeVolumeFrame" /> with a specified identifier.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public static TagLib.Id3v2.RelativeVolumeFrame Get (TagLib.Id3v2.Tag tag, string identification, bool create);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.Id3v2.RelativeVolumeFrame</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="TagLib.Id3v2.Tag" />
        <Parameter Name="identification" Type="System.String" />
        <Parameter Name="create" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="tag">A <see cref="T:TagLib.Id3v2.Tag" /> to search.</param>
        <param name="identification">A <see cref="T:System.String" /> specifying the identifier to search for.</param>
        <param name="create">A <see cref="T:System.Boolean" /> specifying whether or not to create a new instance if one is not found.</param>
        <summary>Searches for a <see cref="T:TagLib.Id3v2.RelativeVolumeFrame" /> with a specified identifier, optionally creating one if none is found.</summary>
        <returns>A <see cref="T:TagLib.Id3v2.RelativeVolumeFrame" /> containing with the given identifier, or <see langword="null" /> if not found and not creating.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Channels">
      <MemberSignature Language="C#" Value="public TagLib.Id3v2.ChannelType[] Channels { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.Id3v2.ChannelType[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the channel types defined in the current instance.</summary>
        <value>A <see cref="T:TagLib.Id3v2.ChannelType" /> array listing the channel types defined in the current instance.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Identification">
      <MemberSignature Language="C#" Value="public string Identification { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the identification for the current instance.</summary>
        <value>A <see cref="T:System.String" /> containing identification for the current instance.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetPeakVolume">
      <MemberSignature Language="C#" Value="public double GetPeakVolume (TagLib.Id3v2.ChannelType type);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="TagLib.Id3v2.ChannelType" />
      </Parameters>
      <Docs>
        <param name="type">A <see cref="T:TagLib.Id3v2.ChannelType" /> specifying which channel to work with.</param>
        <summary>Gets the greatest volume for a given channel.</summary>
        <returns>A <see cref="System.Double" /> containing the peak volume in dB.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetPeakVolumeIndex">
      <MemberSignature Language="C#" Value="public ulong GetPeakVolumeIndex (TagLib.Id3v2.ChannelType type);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="TagLib.Id3v2.ChannelType" />
      </Parameters>
      <Docs>
        <param name="type">A <see cref="T:TagLib.Id3v2.ChannelType" /> specifying which channel to work with.</param>
        <summary>Gets the index for the greatest volume for a given channel.</summary>
        <returns>A <see cref="System.UInt64" /> containing the peak volume in dB times 512.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetVolumeAdjustment">
      <MemberSignature Language="C#" Value="public float GetVolumeAdjustment (TagLib.Id3v2.ChannelType type);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="TagLib.Id3v2.ChannelType" />
      </Parameters>
      <Docs>
        <param name="type">A <see cref="T:TagLib.Id3v2.ChannelType" /> specifying which channel to work with.</param>
        <summary>Gets the relative volume adjustment suggested for the channel.</summary>
        <returns>A <see cref="T:System.Single" /> containing the relative volume adjustment in dB.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetVolumeAdjustmentIndex">
      <MemberSignature Language="C#" Value="public short GetVolumeAdjustmentIndex (TagLib.Id3v2.ChannelType type);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="TagLib.Id3v2.ChannelType" />
      </Parameters>
      <Docs>
        <param name="type">A <see cref="T:TagLib.Id3v2.ChannelType" /> specifying which channel to work with.</param>
        <summary>Gets the index for the relative volume adjustment suggested for the channel.</summary>
        <returns>A <see cref="T:System.Int64" /> containing the relative volume adjustment in dB times 512.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetPeakVolume">
      <MemberSignature Language="C#" Value="public void SetPeakVolume (TagLib.Id3v2.ChannelType type, double adjustment);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="TagLib.Id3v2.ChannelType" />
        <Parameter Name="adjustment" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="type">A <see cref="T:TagLib.Id3v2.ChannelType" /> specifying which channel to work with.</param>
        <param name="adjustment">A <see cref="System.Double" /> containing the peak volume in dB.</param>
        <summary>Sets the greatest volume for a given channel.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetPeakVolumeIndex">
      <MemberSignature Language="C#" Value="public void SetPeakVolumeIndex (TagLib.Id3v2.ChannelType type, ulong index);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="TagLib.Id3v2.ChannelType" />
        <Parameter Name="index" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="type">A <see cref="T:TagLib.Id3v2.ChannelType" /> specifying which channel to work with.</param>
        <param name="index">A <see cref="System.UInt64" /> containing the peak volume in dB times 512.</param>
        <summary>Sets the index for the greatest volume for a given channel.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetVolumeAdjustment">
      <MemberSignature Language="C#" Value="public void SetVolumeAdjustment (TagLib.Id3v2.ChannelType type, float adjustment);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="TagLib.Id3v2.ChannelType" />
        <Parameter Name="adjustment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="type">A <see cref="T:TagLib.Id3v2.ChannelType" /> specifying which channel to work with.</param>
        <param name="adjustment">A <see cref="T:System.Single" /> containing the relative volume adjustment in dB.</param>
        <summary>Sets the volume adjustment for a specific channel.</summary>
        <remarks>Value must be between -64dB and 64dB.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVolumeAdjustmentIndex">
      <MemberSignature Language="C#" Value="public void SetVolumeAdjustmentIndex (TagLib.Id3v2.ChannelType type, short index);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="TagLib.Id3v2.ChannelType" />
        <Parameter Name="index" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="type">A <see cref="T:TagLib.Id3v2.ChannelType" /> specifying which channel to work with.</param>
        <param name="index">A <see cref="T:System.Int16" /> containing the relative volume adjustment in dB times 512.</param>
        <summary>Sets the index for the volume adjustment for a specific channel.</summary>
        <remarks>Value must be between -64dB and 64dB.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelativeVolumeFrame (TagLib.ByteVector data, byte version);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="data" Type="TagLib.ByteVector" />
        <Parameter Name="version" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="data">A <see cref="T:TagLib.ByteVector" /> containing an ID3v2 frame.</param>
        <param name="version">A <see cref="T:System.Byte" /> specifying the ID3v2 version the frame is stored in.</param>
        <summary>Constructs and intializes a new instance of <see cref="T:TagLib.Id3v2.RelativeVolumeFrame" /> from a raw ID3v2 frame.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RelativeVolumeFrame (TagLib.ByteVector data, int offset, TagLib.Id3v2.FrameHeader header, byte version);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="data" Type="TagLib.ByteVector" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="header" Type="TagLib.Id3v2.FrameHeader" />
        <Parameter Name="version" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="data">A <see cref="T:TagLib.ByteVector" /> containing an ID3v2 frame.</param>
        <param name="offset">A <see cref="T:System.Int32" /> specifying at what index in <paramref name="data" /> the frame begins.</param>
        <param name="header">A <see cref="T:TagLib.Id3v2.FrameHeader" /> containing header information for the new instance.</param>
        <param name="version">A <see cref="T:System.Byte" /> specifying the ID3v2 version the frame is stored in.</param>
        <summary>Constructs and intializes a new instance of <see cref="T:TagLib.Id3v2.RelativeVolumeFrame" /> from a raw ID3v2 frame.</summary>
        <remarks />
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>This class is used for accessing and modifying ID3v2 Relative Volume Adjustment (RVA2) frames.</summary>
    <remarks />
  </Docs>
</Type>
