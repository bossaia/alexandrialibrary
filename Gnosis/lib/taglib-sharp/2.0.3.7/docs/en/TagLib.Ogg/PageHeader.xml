<Type Name="PageHeader" FullName="TagLib.Ogg.PageHeader">
  <TypeSignature Language="C#" Value="public struct PageHeader" />
  <AssemblyInfo>
    <AssemblyName>taglib-sharp</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageHeader (TagLib.Ogg.File file, long position);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="file" Type="TagLib.Ogg.File" />
        <Parameter Name="position" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="file">A <see cref="T:TagLib.Ogg.File" /> to read from.</param>
        <param name="position">A <see cref="T:System.Int64" /> specifying at what seek position to start reading.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.Ogg.PageHeader" /> by reading it from a file.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public TagLib.ByteVector Render ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.ByteVector</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Renders the current instance as an OGG page header.</summary>
        <returns>A <see cref="T:TagLib.ByteVector" /> containing the rendered version of the current instance.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="PacketSizes">
      <MemberSignature Language="C#" Value="public int[] PacketSizes { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the sizes of the packets in the page described by the current instance.</summary>
        <value>A <see cref="T:System.Int32" /> array containing packet sizes.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AbsoluteGranularPosition">
      <MemberSignature Language="C#" Value="public long AbsoluteGranularPosition { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the absolute granular position of the page described by the current instance.</summary>
        <value>A <see cref="T:System.Int64" /> containing the absolute granular position.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="PageSequenceNumber">
      <MemberSignature Language="C#" Value="public uint PageSequenceNumber { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the page sequence number of the current instance.</summary>
        <value>A <see cref="T:System.UInt32" /> containing the page sequence number of the current instance.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="StreamSerialNumber">
      <MemberSignature Language="C#" Value="public uint StreamSerialNumber { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the serial number specifying to what stream the current instance belongs.</summary>
        <value>A <see cref="T:System.UInt32" /> containing a stream serial number.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public uint Size { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the size of the current instance on disk.</summary>
        <value>A <see cref="T:System.UInt32" /> containing the size of the current instance on disk.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="DataSize">
      <MemberSignature Language="C#" Value="public uint DataSize { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the size of the page data following the current instance.</summary>
        <value>A <see cref="T:System.UInt32" /> containing page data size.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageHeader (uint streamSerialNumber, uint pageNumber, TagLib.Ogg.PageFlags flags);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="streamSerialNumber" Type="System.UInt32" />
        <Parameter Name="pageNumber" Type="System.UInt32" />
        <Parameter Name="flags" Type="TagLib.Ogg.PageFlags" />
      </Parameters>
      <Docs>
        <param name="streamSerialNumber">A <see cref="T:System.UInt32" /> containing the serial number of the OGG bitstream containing the comment.</param>
        <param name="pageNumber">A <see cref="T:System.UInt32" /> containing the index of the page in the OGG bitstream.</param>
        <param name="flags">A <see cref="TagLib.Ogg.PageFlags" /> containing the flags desribing the new instance.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.Ogg.PageFlags" /> with a specified stream serial number, page number, and flags.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public TagLib.Ogg.PageFlags Flags { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.Ogg.PageFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the flags applied to the current instance.</summary>
        <value>A <See cref="T:TagLib.Ogg.PageFlags" /> containing the flags applied to the current instance.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (TagLib.Ogg.PageHeader other);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="TagLib.Ogg.PageHeader" />
      </Parameters>
      <Docs>
        <param name="other">A <see cref="T:TagLib.Ogg.PageHeader" /> to compare to the current instance.</param>
        <summary>Compares the current instance to another OGG page header to determine if they are equal to eachother.</summary>
        <returns>
          <see langword="true" /> if they are equal. Otherwise <see langword="false" />.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool op_Equality (TagLib.Ogg.PageHeader first, TagLib.Ogg.PageHeader second);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="TagLib.Ogg.PageHeader" />
        <Parameter Name="second" Type="TagLib.Ogg.PageHeader" />
      </Parameters>
      <Docs>
        <param name="first">The first <see cref="T:TagLib.Ogg.PageHeader" /> to compare.</param>
        <param name="second">The second <see cref="T:TagLib.Ogg.PageHeader" /> to compare.</param>
        <summary>Compares two OGG page headers to determine if they are equal to eachother.</summary>
        <returns>
          <see langword="true" /> if they are equal. Otherwise <see langword="false" />.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool op_Inequality (TagLib.Ogg.PageHeader first, TagLib.Ogg.PageHeader second);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="TagLib.Ogg.PageHeader" />
        <Parameter Name="second" Type="TagLib.Ogg.PageHeader" />
      </Parameters>
      <Docs>
        <param name="first">The first <see cref="T:TagLib.Ogg.PageHeader" /> to compare.</param>
        <param name="second">The second <see cref="T:TagLib.Ogg.PageHeader" /> to compare.</param>
        <summary>Compares two OGG page headers to determine if they are unequal to eachother.</summary>
        <returns>
          <see langword="true" /> if they are unequal. Otherwise <see langword="false" />.</returns>
        <remarks />
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>This struct is used for reading and creating OGG page headers.</summary>
    <remarks />
  </Docs>
</Type>
