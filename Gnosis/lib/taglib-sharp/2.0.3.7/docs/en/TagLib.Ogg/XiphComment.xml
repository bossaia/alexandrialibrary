<Type Name="XiphComment" FullName="TagLib.Ogg.XiphComment">
  <TypeSignature Language="C#" Value="public class XiphComment : TagLib.Tag, System.Collections.Generic.IEnumerable&lt;string&gt;" />
  <AssemblyInfo>
    <AssemblyName>taglib-sharp</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>TagLib.Tag</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.String&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XiphComment ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.Ogg.XiphComment" /> that is empty.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XiphComment (TagLib.ByteVector data);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="data" Type="TagLib.ByteVector" />
      </Parameters>
      <Docs>
        <param name="data">A <see cref="T:TagLib.ByteVector" /> containing a Vorbis Comment.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.Ogg.XiphComment" /> by reading a Vorbis Comment.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="RemoveField">
      <MemberSignature Language="C#" Value="public void RemoveField (string key);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">A <see cref="T:System.String" /> containing a case-insensitive key.</param>
        <summary>Removes a field with a specified key from the current instance.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public TagLib.ByteVector Render (bool addFramingBit);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.ByteVector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addFramingBit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="addFramingBit">A <see cref="T:System.Boolean" /> specifying whether or not to add a framing bit.</param>
        <summary>Renders the current instance as a Vorbis Comment with an optional framing bit.</summary>
        <returns>A <see cref="T:TagLib.ByteVector" /> containing a rendered version of the current instance.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="protected void Parse (TagLib.ByteVector data);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="TagLib.ByteVector" />
      </Parameters>
      <Docs>
        <param name="data">A <see cref="T:TagLib.ByteVector" /> containing a Vorbis Comment.</param>
        <summary>Populates the current instance by parsing a Vorbis Comment.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public uint FieldCount { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the total number of field values in the current instance.</summary>
        <value>A <see cref="T:System.UInt32" /> containing the total number of field values in the current instance.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="VendorId">
      <MemberSignature Language="C#" Value="public string VendorId { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the vendor identification for the current instance.</summary>
        <value>A <see cref="T:System.String" /> containing the vendor identification for the current instance.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public string[] GetField (string key);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">A <see cref="T:System.String" /> containing a case-insensitive key.</param>
        <summary>Gets a text field with a given key.</summary>
        <returns>A <see cref="T:System.String" /> containing all the text in a specified field.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetFirstField">
      <MemberSignature Language="C#" Value="public string GetFirstField (string key);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">A <see cref="T:System.String" /> containing a case-insensitive key.</param>
        <summary>Gets the first text field with a given key.</summary>
        <returns>A <see cref="T:System.String" /> containing the first text field, or <see langword="null" /> if none is found.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetField">
      <MemberSignature Language="C#" Value="public void SetField (string key, string[] values);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="values" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="key">A <see cref="T:System.String" /> containing a case-insensitive key.</param>
        <param name="values">A <see cref="T:System.String" /> array containing strings to store.</param>
        <summary>Stores a collection of strings as a field.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetField">
      <MemberSignature Language="C#" Value="public void SetField (string key, uint number);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="number" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="key">A <see cref="T:System.String" /> containing a case-insensitive key.</param>
        <param name="number">A <see cref="T:System.UInt32" /> containing a number to store.</param>
        <summary>Stores a number as a field.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;string&gt; GetEnumerator ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the enumerator for the current instance.</summary>
        <returns>A <see cref="T:System.Collections.Generic.IEnumerator&lt;System.String&gt;" /> enumerating through the field keys contained in the current instance.</returns>
        <remarks />
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>This class is used to access and manipulate tags stored in the Xiph Vorbis Comment format.</summary>
    <remarks />
  </Docs>
</Type>
