<Type Name="Footer" FullName="TagLib.Ape.Footer">
  <TypeSignature Language="C#" Value="public struct Footer : IEquatable&lt;TagLib.Ape.Footer&gt;" />
  <AssemblyInfo>
    <AssemblyName>taglib-sharp</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;TagLib.Ape.Footer&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Footer (TagLib.ByteVector data);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="data" Type="TagLib.ByteVector" />
      </Parameters>
      <Docs>
        <param name="data">A <see cref="T:TagLib.ByteVector" /> containing a header or footer to read.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.Ape.Footer" /> by reading one from a <see cref="T:TagLib.ByteVector" />.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="RenderFooter">
      <MemberSignature Language="C#" Value="public TagLib.ByteVector RenderFooter ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.ByteVector</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Renders the current instance as a footer.</summary>
        <returns>A <see cref="T:TagLib.ByteVector" /> containing an APE Version 2 footer.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="RenderHeader">
      <MemberSignature Language="C#" Value="public TagLib.ByteVector RenderHeader ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.ByteVector</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Renders the current instance as an APE Version 2 header if <see cref="P:TagLib.Ape.Footer.HeaderPresent" /> is <see langword="true" />.</summary>
        <returns>Returns a <see cref="T:TagLib.ByteVector" /> containing an APE Version 2 header if <see cref="P:TagLib.Ape.Footer.HeaderPresent" /> is <see langword="true" />. Otherwise an empty <see cref="T:TagLib.ByteVector" />.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public uint Version { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the APE version.</summary>
        <value>A <see cref="T:System.UInt32" /> representing the APE version.</value>
        <remarks>The version will always be 2 for newly created tags and the all tags will be rendered in that format.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemCount">
      <MemberSignature Language="C#" Value="public uint ItemCount { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of items stored in the APE tag.</summary>
        <value>A <see cref="T:System.UInt32" /> representing the number of items stored in the tag.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="TagSize">
      <MemberSignature Language="C#" Value="public uint TagSize { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the tag size, including the footer and items, but excluding the header size should one exist.</summary>
        <value>A <see cref="T:System.UInt32" /> representing the size of the tag, excluding the header size should one exist.</value>
        <remarks>The header size is excluded to maintain compatability with APE Version 1.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompleteTagSize">
      <MemberSignature Language="C#" Value="public uint CompleteTagSize { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the complete tag size, including the header size.</summary>
        <value>A <see cref="T:System.UInt32" /> representing the size of the tag.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public const uint Size = 32;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>Gets the size of an APE footer.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public TagLib.Ape.FooterFlags Flags { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.Ape.FooterFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the flags for the current instance.</summary>
        <value>A <see cref="T:TagLib.Ape.Footer" /> containing the flags.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (TagLib.Ape.Footer other);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="TagLib.Ape.Footer" />
      </Parameters>
      <Docs>
        <param name="other">A <see cref="T:TagLib.Ape.Footer" /> containing the footer to compare.</param>
        <summary>Compares the current instance to another footer to determine if they are equal to eachother.</summary>
        <returns>
          <see langword="true" /> if they are equal. Otherwise <see langword="false" />.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool op_Equality (TagLib.Ape.Footer first, TagLib.Ape.Footer second);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="TagLib.Ape.Footer" />
        <Parameter Name="second" Type="TagLib.Ape.Footer" />
      </Parameters>
      <Docs>
        <param name="first">The first <see cref="T:TagLib.Ape.Footer" /> to compare.</param>
        <param name="second">The second <see cref="T:TagLib.Ape.Footer" /> to compare.</param>
        <summary>Compares two footers to determine if they are equal to eachother.</summary>
        <returns>
          <see langword="true" /> if they are equal. Otherwise <see langword="false" />.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool op_Inequality (TagLib.Ape.Footer first, TagLib.Ape.Footer second);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="TagLib.Ape.Footer" />
        <Parameter Name="second" Type="TagLib.Ape.Footer" />
      </Parameters>
      <Docs>
        <param name="first">The first <see cref="T:TagLib.Ape.Footer" /> to compare.</param>
        <param name="second">The second <see cref="T:TagLib.Ape.Footer" /> to compare.</param>
        <summary>Compares two footers to determine if they are unequal to eachother.</summary>
        <returns>
          <see langword="true" /> if they are unequal. Otherwise <see langword="false" />.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FileIdentifier">
      <MemberSignature Language="C#" Value="public static readonly TagLib.ReadOnlyByteVector FileIdentifier;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.ReadOnlyByteVector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the identifier used for finding APE footers in a file.</summary>
        <remarks>Always "APETAGEX".</remarks>
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>This class is used to access and manipulate header and footer blocks used in the APE tagging format.</summary>
    <remarks>APE headers and footers are very similar and for the sake of simplicity are both represented by this class. The name "Footer" is used as all APE tags are guaranteed to have a footer but not always a header, on account of the original APE 1.0 specification.</remarks>
  </Docs>
</Type>
