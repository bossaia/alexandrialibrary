<Type Name="Item" FullName="TagLib.Ape.Item">
  <TypeSignature Language="C#" Value="public class Item" />
  <AssemblyInfo>
    <AssemblyName>taglib-sharp</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Item (string key, string value);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">A <see cref="T:System.String" /> representing an APE item key.</param>
        <param name="value">A <see cref="T:System.String" /> to store.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.Ape.Item" /> with a specified key and string value.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Item (string key, TagLib.ByteVector value);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="TagLib.ByteVector" />
      </Parameters>
      <Docs>
        <param name="key">A <see cref="T:System.String" /> representing an APE item key.</param>
        <param name="value">A <see cref="T:TagLib.StringList" /> containing data to store.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.Ape.Item" /> with a specified key and byte data.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ToStringArray">
      <MemberSignature Language="C#" Value="public string[] ToStringArray ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the text content of the current instance.</summary>
        <returns>A <see cref="T:System.String" /> array containing the text value of the current instance. If the item contains data, an empty <see cref="T:System.String" /> array is returned.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public TagLib.ByteVector Render ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.ByteVector</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a <see cref="T:TagLib.ByteVector" /> containing an APE item representation of the current instance.</summary>
        <returns>A <see cref="T:TagLib.ByteVector" /> containing an APE tag representation of the current instance.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public string Key { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the key for the current instance.</summary>
        <value>A <see cref="T:System.String" /> representing an APE item key.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public TagLib.ByteVector Value { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.ByteVector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the binary content of the current instance.</summary>
        <value>A <see cref="T:TagLib.ByteVector" /> containing the binary data of the current instance, or null if the current instance is a text type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the rendered data size of the current instance.</summary>
        <value>A <see cref="T:System.Int32" /> representing the rendered size of the item.</value>
        <remarks>For text types, this size is updated whenever <see cref="M:TagLib.Ape.Item.Render()" /> is called.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public TagLib.Ape.ItemType Type { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.Ape.ItemType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the current type of the current instance.</summary>
        <value>A <see cref="T:TagLib.Ape.ItemType" /> specifying the type of data stored in the curren instance.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets whether or not the current item is read only.</summary>
        <value>A <see cref="T:System.Boolean" /> specifying whether or not the current instance is read-only.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether or not the current instance contains data.</summary>
        <value>A <see cref="T:System.Boolean" /> representing whether or not there is data in the current instance.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Item (TagLib.ByteVector data, int offset);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="data" Type="TagLib.ByteVector" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">A <see cref="T:TagLib.ByteVector" /> containing an APE item.</param>
        <param name="offset">A <see cref="T:TagLib.Int32" /> specifying the offset in the data at which the item begins.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.Ape.Item" /> by reading an APE Item from a <see cref="T:TagLib.ByteVector" /> at a given offset.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="protected void Parse (TagLib.ByteVector data, int offset);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="TagLib.ByteVector" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">A <see cref="T:TagLib.ByteVector" /> containing an APE item.</param>
        <param name="offset">A <see cref="T:TagLib.Int32" /> specifying the offset in the data at which the item begins.</param>
        <summary>Sets the values in the current instance by reading an APE Item from a <see cref="T:TagLib.ByteVector" /> at a given offset.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Item (string key, TagLib.StringCollection value);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="TagLib.StringCollection" />
      </Parameters>
      <Docs>
        <param name="key">A <see cref="T:System.String" /> representing an APE item key.</param>
        <param name="value">A <see cref="T:TagLib.StringCollection" /> to store.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.Ape.Item" /> with a specified key and string values.</summary>
        <remarks />
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>This class is used to access and manipulate items stored in a <see cref="T:TagLib.Ape.Tag" />.</summary>
    <remarks />
  </Docs>
</Type>
