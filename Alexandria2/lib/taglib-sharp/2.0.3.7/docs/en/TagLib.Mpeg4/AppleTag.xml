<Type Name="AppleTag" FullName="TagLib.Mpeg4.AppleTag">
  <TypeSignature Language="C#" Value="public class AppleTag : TagLib.Tag, System.Collections.Generic.IEnumerable&lt;TagLib.Mpeg4.Box&gt;" />
  <AssemblyInfo>
    <AssemblyName>taglib-sharp</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>TagLib.Tag</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;TagLib.Mpeg4.Box&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Members>
    <Member MemberName="DataBoxes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TagLib.Mpeg4.AppleDataBox&gt; DataBoxes (System.Collections.Generic.IEnumerable&lt;TagLib.ByteVector&gt; list);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TagLib.Mpeg4.AppleDataBox&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Generic.IEnumerable&lt;TagLib.ByteVector&gt;" />
      </Parameters>
      <Docs>
        <param name="list">A <see cref="T:System.Collections.Generic.IEnumerable&lt;TagLib.ByteVector&gt;" /> containing all the data box names to look for.</param>
        <summary>Gets all the data boxes with specified names in the current instance.</summary>
        <returns>A <see cref="T:System.Collections.Generic.IEnumerable&lt;TagLib.Mpeg4.AppleDataBox&gt;" /> containing all the matching boxes.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="DataBoxes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TagLib.Mpeg4.AppleDataBox&gt; DataBoxes (TagLib.ByteVector[] vects);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TagLib.Mpeg4.AppleDataBox&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vects" Type="TagLib.ByteVector[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="vects">A <see cref="T:TagLib.ByteVector" /> array containing all the data box names to look for.</param>
        <summary>Gets all the data boxes with specified names in the current instance.</summary>
        <returns>A <see cref="T:System.Collections.Generic.IEnumerable&lt;TagLib.Mpeg4.AppleDataBox&gt;" /> containing all the matching boxes.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="DataBoxes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TagLib.Mpeg4.AppleDataBox&gt; DataBoxes (string mean, string name);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TagLib.Mpeg4.AppleDataBox&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mean" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mean">A <see cref="T:System.String" /> specifying a mean ID.</param>
        <param name="name">A <see cref="T:System.String" /> specifying a name.</param>
        <summary>Gets all the custom data boxes with specified mean and name ID's in the current instance.</summary>
        <returns>A <see cref="T:System.Collections.Generic.IEnumerable&lt;TagLib.Mpeg4.AppleDataBox&gt;" /> containing all the matching boxes.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public string[] GetText (TagLib.ByteVector type);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="TagLib.ByteVector" />
      </Parameters>
      <Docs>
        <param name="type">A <see cref="T:TagLib.ByteVector" /> containing a box type.</param>
        <summary>Gets the text contained in a given box type.</summary>
        <returns>A <see cref="T:System.String" /> containing the text.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (TagLib.ByteVector type, TagLib.Mpeg4.AppleDataBox[] boxes);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="TagLib.ByteVector" />
        <Parameter Name="boxes" Type="TagLib.Mpeg4.AppleDataBox[]" />
      </Parameters>
      <Docs>
        <param name="type">A <see cref="T:TagLib.ByteVector" /> containing a box type.</param>
        <param name="boxes">A <see cref="T:TagLib.Mpeg4.AppleDataBox" /> array containing boxes to store with a given type.</param>
        <summary>Stores a collection of boxes with a given type.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (TagLib.ByteVector type, TagLib.ByteVector data, uint flags);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="TagLib.ByteVector" />
        <Parameter Name="data" Type="TagLib.ByteVector" />
        <Parameter Name="flags" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="type">A <see cref="T:TagLib.ByteVector" /> containing a box type.</param>
        <param name="data">A <see cref="T:TagLib.ByteVector" /> containing data to store.</param>
        <param name="flags">A <see cref="T:System.UInt32" /> containing flags to apply to the boxes.</param>
        <summary>Stores a <see cref="T:TagLib.ByteVector" /> with a box type and flags.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public void SetText (TagLib.ByteVector type, string[] text);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="TagLib.ByteVector" />
        <Parameter Name="text" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="type">A <see cref="T:TagLib.ByteVector" /> containing a box type.</param>
        <param name="text">A <see cref="T:System.String" /> array containing text to store.</param>
        <summary>Sets the data for a specified box to a given string array.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public void SetText (TagLib.ByteVector type, string text);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="TagLib.ByteVector" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">A <see cref="T:TagLib.ByteVector" /> containing a box type.</param>
        <param name="text">A <see cref="T:System.String" /> containing text to store.</param>
        <summary>Sets the data for a specified box to a given string.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ClearData">
      <MemberSignature Language="C#" Value="public void ClearData (TagLib.ByteVector type);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="TagLib.ByteVector" />
      </Parameters>
      <Docs>
        <param name="type">A <see cref="T:TagLib.ByteVector" /> containing a box type.</param>
        <summary>Clears the data for a specific box type.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="DetachIlst">
      <MemberSignature Language="C#" Value="public void DetachIlst ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Detaches the tag's ILST from its parent box, preventing it from being saved.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="IsCompilation">
      <MemberSignature Language="C#" Value="public bool IsCompilation { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether or not the current instance is a compilation.</summary>
        <value>A <see cref="T:System.Boolean" /> specifying whether or not the current instance is a compilation.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppleTag (TagLib.Mpeg4.IsoUserDataBox box);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="box" Type="TagLib.Mpeg4.IsoUserDataBox" />
      </Parameters>
      <Docs>
        <param name="box">A <see cref="T:TagLib.Mpeg4.IsoUserDataBox" /> which contains, or should contain the tag.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.Mpeg4.AppleTag" /> for a specified User Data box.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;TagLib.Mpeg4.Box&gt; GetEnumerator ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;TagLib.Mpeg4.Box&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the enumerator for the current instance.</summary>
        <returns>A <see cref="T:System.Collections.Generic.IEnumerator&lt;TagLib.Mpeg4.Box&gt;" /> enumerating through the boxes contained in the current instance.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (TagLib.ByteVector type, TagLib.ByteVectorCollection data, uint flags);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="TagLib.ByteVector" />
        <Parameter Name="data" Type="TagLib.ByteVectorCollection" />
        <Parameter Name="flags" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="type">A <see cref="T:TagLib.ByteVector" /> containing a box type.</param>
        <param name="data">A <see cref="T:TagLib.ByteVectorCollection" /> containing data to store.</param>
        <param name="flags">A <see cref="T:System.UInt32" /> containing flag data for to use for the boxes.</param>
        <summary>Sets the data for a specified data box type.</summary>
        <remarks>One box will be created per value in <paramref name="data" />.</remarks>
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>This class is used to access and manipulate tags stored in the Apple "ilst" tagging format.</summary>
    <remarks />
  </Docs>
</Type>
