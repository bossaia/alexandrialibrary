<Type Name="AudioHeader" FullName="TagLib.Mpeg.AudioHeader">
  <TypeSignature Language="C#" Value="public struct AudioHeader : TagLib.IAudioCodec" />
  <AssemblyInfo>
    <AssemblyName>taglib-sharp</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>TagLib.IAudioCodec</InterfaceName>
    </Interface>
  </Interfaces>
  <Members>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public TagLib.Mpeg.Version Version { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.Mpeg.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the MPEG version of the current instance.</summary>
        <value>A <see cref="T:TagLib.Mpeg.Version" /> representing the MPEG version.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="IsPadded">
      <MemberSignature Language="C#" Value="public bool IsPadded { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether or not the current instance is padded.</summary>
        <value>A <see cref="T:System.Boolean" /> specifying whether or not the current instance is padded.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ChannelMode">
      <MemberSignature Language="C#" Value="public TagLib.Mpeg.ChannelMode ChannelMode { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.Mpeg.ChannelMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the channel mode of the current instance.</summary>
        <value>A <see cref="T:TagLib.Mpeg.ChannelMode" /> representing the channel mode.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="IsCopyrighted">
      <MemberSignature Language="C#" Value="public bool IsCopyrighted { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether or not the current instance is copyrighted.</summary>
        <value>A <see cref="T:System.Boolean" /> specifying whether or not the current instance is copyrighted.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="IsOriginal">
      <MemberSignature Language="C#" Value="public bool IsOriginal { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether or not the current instance is original.</summary>
        <value>A <see cref="T:System.Boolean" /> specifying whether or not the current instance is original.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AudioFrameLength">
      <MemberSignature Language="C#" Value="public int AudioFrameLength { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the audio frame length of the current instance.</summary>
        <value>A <see cref="T:System.Int32" /> representing the audio frame length.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="XingHeader">
      <MemberSignature Language="C#" Value="public TagLib.Mpeg.XingHeader XingHeader { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.Mpeg.XingHeader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the Xing Header for the current instance.</summary>
        <value>A <see cref="T:TagLib.Mpeg.XingHeader" />.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetStreamLength">
      <MemberSignature Language="C#" Value="public void SetStreamLength (long streamLength);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamLength" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="streamLength">A <see cref="T:System.Int64" /> containing the stream length.</param>
        <summary>Sets the length of the stream.</summary>
        <remarks>Stream length is required to evaluate several properties.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AudioLayer">
      <MemberSignature Language="C#" Value="public int AudioLayer { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the audio layer of the current instance.</summary>
        <value>A <see cref="T:System.Int32" /> representing the audio layer.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AudioBitrate">
      <MemberSignature Language="C#" Value="public int AudioBitrate { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the audio bitrate of the current instance.</summary>
        <value>A <see cref="T:System.Int32" /> representing the audio bitrate.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AudioSampleRate">
      <MemberSignature Language="C#" Value="public int AudioSampleRate { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the audio sample rate of the current instance.</summary>
        <value>A <see cref="T:System.Int32" /> representing the audio sample rate.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AudioChannels">
      <MemberSignature Language="C#" Value="public int AudioChannels { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of audio channels in the current instance.</summary>
        <value>A <see cref="T:System.Int32" /> representing the number of audio channels.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public TimeSpan Duration { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the duration of the current instance.</summary>
        <value>A <see cref="T:System.TimeSpan" /> containing the length of the stream represented by the current instance.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a plain text description of the current instance.</summary>
        <value>A <see cref="T:System.String" /> describing the current instance.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="IsProtected">
      <MemberSignature Language="C#" Value="public bool IsProtected { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether or not the current instance is protected.</summary>
        <value>A <see cref="T:System.Boolean" /> specifying whether or not the current instance is protected.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="MediaTypes">
      <MemberSignature Language="C#" Value="public TagLib.MediaTypes MediaTypes { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.MediaTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the media types contained in the current instance.</summary>
        <value>Always <see cref="F:TagLib.MediaTypes.Audio" />.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public static bool Find (out TagLib.Mpeg.AudioHeader header, TagLib.File file, long position);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="header" Type="TagLib.Mpeg.AudioHeader&amp;" RefType="out" />
        <Parameter Name="file" Type="TagLib.File" />
        <Parameter Name="position" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="header">A <see cref="T:TagLib.Mpeg.AudioHeader" /> found in the file.</param>
        <param name="file">A <see cref="T:TagLib.File" /> to search.</param>
        <param name="position">A <see cref="T:System.Int64" /> specifying the seek position at which to start searching.</param>
        <summary>Searches for an audio header in a given file.</summary>
        <returns>A <see cref="T:System.Boolean" /> stating whether or not the header was found.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public static bool Find (out TagLib.Mpeg.AudioHeader header, TagLib.File file, long position, int length);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="header" Type="TagLib.Mpeg.AudioHeader&amp;" RefType="out" />
        <Parameter Name="file" Type="TagLib.File" />
        <Parameter Name="position" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="header">A <see cref="T:TagLib.Mpeg.AudioHeader" /> found in the file.</param>
        <param name="file">A <see cref="T:TagLib.File" /> to search.</param>
        <param name="position">A <see cref="T:System.Int64" /> specifying the seek position at which to start searching.</param>
        <param name="length">A <see cref="T:System.Int32" /> specifying the number of bytes to read before giving up.</param>
        <summary>Searches for an audio header in a given file.</summary>
        <returns>A <see cref="T:System.Boolean" /> stating whether or not the header was found.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Unknown">
      <MemberSignature Language="C#" Value="public static readonly TagLib.Mpeg.AudioHeader Unknown;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.Mpeg.AudioHeader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an unknown/unfound audio header.</summary>
        <remarks />
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>This class is used to access an MPEG audio header structure, and provides <see cref="T:TagLib.IAudioCodec" /> support for it.</summary>
    <remarks />
  </Docs>
</Type>
