<Type Name="CombinedTag" FullName="TagLib.CombinedTag">
  <TypeSignature Language="C#" Value="public class CombinedTag : TagLib.Tag" />
  <AssemblyInfo>
    <AssemblyName>taglib-sharp</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>TagLib.Tag</BaseTypeName>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CombinedTag ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <summary>Constructs and initialized a new instance of <see cref="T:TagLib.CombinedTag" />.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CombinedTag (TagLib.Tag[] tags);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="tags" Type="TagLib.Tag[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="tags">A <see cref="T:TagLib.Tag" /> array containing tags to be combined.</param>
        <summary>Constructs and initialized a new instance of <see cref="T:TagLib.CombinedTag" /> containing a specified collection of tags.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetTags">
      <MemberSignature Language="C#" Value="public void SetTags (TagLib.Tag[] tags);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="TagLib.Tag[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="tags">A <see cref="T:TagLib.Tag" /> array containing tags to be combined.</param>
        <summary>Sets the tags to combine in the current instance.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="InsertTag">
      <MemberSignature Language="C#" Value="protected void InsertTag (int index, TagLib.Tag tag);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="tag" Type="TagLib.Tag" />
      </Parameters>
      <Docs>
        <param name="index">A <see cref="T:System.Int32" /> specifying the index at which to insert the tag.</param>
        <param name="tag">A <see cref="T:TagLib.Tag" /> to insert into the list of combined tags.</param>
        <summary>Inserts a <see cref="T:TagLib.Tag" /> into the list of combined tag.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AddTag">
      <MemberSignature Language="C#" Value="protected void AddTag (TagLib.Tag tag);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="TagLib.Tag" />
      </Parameters>
      <Docs>
        <param name="tag">A <see cref="T:TagLib.Tag" /> to add at the end of the list of combined tags.</param>
        <summary>Adds a <see cref="T:TagLib.Tag" /> to the list of combined tag.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="RemoveTag">
      <MemberSignature Language="C#" Value="protected void RemoveTag (TagLib.Tag tag);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="TagLib.Tag" />
      </Parameters>
      <Docs>
        <param name="tag">A <see cref="T:TagLib.Tag" /> to remove from the list of combined tags.</param>
        <summary>Removes a <see cref="T:TagLib.Tag" /> from the list of combined tag.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ClearTags">
      <MemberSignature Language="C#" Value="protected void ClearTags ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears the list of combined tags.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Tags">
      <MemberSignature Language="C#" Value="public virtual TagLib.Tag[] Tags { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.Tag[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the list of tags combined in the current instance.</summary>
        <value>A <see cref="T:TagLib.Tag" /> array containing the list of tags combined in the current instance.</value>
        <remarks />
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>This class combines a collection of tags so that a single operation is performed on each tag.</summary>
    <remarks>Storage operations, are performed on each tag. Read operations are performed by looping through each entry until a non-zero value is found.</remarks>
  </Docs>
</Type>
