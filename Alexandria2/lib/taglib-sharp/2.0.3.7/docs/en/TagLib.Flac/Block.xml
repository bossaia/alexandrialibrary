<Type Name="Block" FullName="TagLib.Flac.Block">
  <TypeSignature Language="C#" Value="public class Block" />
  <AssemblyInfo>
    <AssemblyName>taglib-sharp</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Block (TagLib.Flac.BlockType type, TagLib.ByteVector data);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="type" Type="TagLib.Flac.BlockType" />
        <Parameter Name="data" Type="TagLib.ByteVector" />
      </Parameters>
      <Docs>
        <param name="type">A <see cref="T:TagLib.Flac.BlockType" /> specifying the type of the new instance.</param>
        <param name="data">A <see cref="T:TagLib.ByteVector" /> containing the block's contents.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.Flac.Block" /> with a specified type and contents.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public TagLib.ByteVector Render (bool isLastBlock);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.ByteVector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isLastBlock" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isLastBlock">A <see cref="T:System.Boolean" /> specifying whether or not the block is the last metadata block.</param>
        <summary>Renders the current instance as a FLAC metadata block.</summary>
        <returns>A <see cref="T:TagLib.ByteVector" /> containing the rendered version.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public TagLib.Flac.BlockType Type { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.Flac.BlockType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the type of the current instance.</summary>
        <value>A <see cref="T:TagLib.Flac.BlockType" /> containing the type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="IsLastBlock">
      <MemberSignature Language="C#" Value="public bool IsLastBlock { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether or not the current instance is the last metadata block.</summary>
        <value>A <see cref="T:System.Boolean" /> specifying whether or not the block is the last metadata block.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public TagLib.ByteVector Data { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.ByteVector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the data contained in the current instance.</summary>
        <value>A <see cref="T:System.UInt32" /> containing the data.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Block (TagLib.Flac.BlockHeader header, TagLib.ByteVector data);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="header" Type="TagLib.Flac.BlockHeader" />
        <Parameter Name="data" Type="TagLib.ByteVector" />
      </Parameters>
      <Docs>
        <param name="header">A<see cref="T:TagLib.Flac.BlockHeader" /> containing information about the new block.</param>
        <param name="data">A <see cref="T:TagLib.ByteVector" /> containing the block's contents.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.Flac.Block" /> with a specified header and contents.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="DataSize">
      <MemberSignature Language="C#" Value="public uint DataSize { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the size of the data in the current instance.</summary>
        <value>A <see cref="T:System.UInt32" /> containing the data size.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="TotalSize">
      <MemberSignature Language="C#" Value="public uint TotalSize { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the total size of the current instance on disk.</summary>
        <value>A <see cref="T:System.UInt32" /> containing the total size of the block.</value>
        <remarks />
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>This class is used to read and create FLAC metadata blocks.</summary>
    <remarks />
  </Docs>
</Type>
