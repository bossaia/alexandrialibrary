@using HallOfBeorn.Models
@model ScenarioListViewModel

@{
    ViewBag.Title = "Scenarios";
}

@section scripts {
    <script type="text/javascript" src="/Scripts/highcharts.js"></script>
    <script type="text/javascript">
        var scenariosIndex = window.location.href.lastIndexOf("/Scenarios/");
        if (scenariosIndex != -1) {
            var id = window.location.href.substr(scenariosIndex + 11);
            if (id != null && id.length > 0) {

                $.get("/Cards/ScenarioDetails/" + id).success(function (result) {
                    var series = [
                        {
                            name: 'Enemies',
                            data: [result.EasyEnemies, result.NormalEnemies, result.NightmareEnemies]
                        },
                        {
                            name: 'Locations',
                            data: [result.EasyLocations, result.NormalLocations, result.NightmareLocations]
                        },
                        {
                            name: 'Treacheries',
                            data: [result.EasyTreacheries, result.NormalTreacheries, result.NightmareTreacheries]
                        }
                    ];

                    if (result.EasyHasObjectives || result.NormalHasObjectives || result.NightmareHasObjectives) {
                        series.push({
                            name: 'Objectives',
                            data: [result.EasyObjectives, result.NormalObjectives, result.NightmareObjectives]
                        });
                    }
                    if (result.EasyHasObjectiveAllies || result.NormalHasObjectiveAllies || result.NightmareHasObjectiveAllies) {
                        series.push({
                            name: 'Objective Allies',
                            data: [result.EasyObjectiveAllies, result.NormalObjectiveAllies, result.NightmareObjectiveAllies]
                        });
                    }
                    if (result.EasyHasSurge || result.NormalHasSurge || result.NightmareHasSurge) {
                        series.push({
                            name: 'Surge',
                            data: [result.EasySurges, result.NormalSurges, result.NightmareSurges]
                        });
                    }

                    $('#chartContainer').highcharts({
                        chart: {
                            type: 'bar'
                        },
                        title: {
                            text: 'Statistics for ' + result.title
                        },
                        xAxis: {
                            categories: ['Easy', 'Normal', 'Nightmare']
                        },
                        yAxis: {
                            min: 0,
                            title: {
                                text: 'Card Breakdowns'
                            }
                        },
                        legend: {
                            reversed: false
                        },
                        plotOptions: {
                            series: {
                                cursor: 'pointer',
                                point: {
                                    events: {
                                        click: function (e) {
                                            var cardType = 'Encounter';
                                            var keyword = '';
                                            switch (this.series.name) {
                                                case 'Enemies':
                                                    cardType = 'Enemy';
                                                    break;
                                                case 'Locations':
                                                    cardType = 'Location';
                                                    break;
                                                case 'Treacheries':
                                                    cardType = 'Treachery';
                                                    break;
                                                case 'Objectives':
                                                    cardType = 'Objective';
                                                    break;
                                                case 'Objective Allies':
                                                    cardType = 'Objective_Ally';
                                                    break;
                                                case 'Surge':
                                                    keyword = 'Surge.';
                                                    break;
                                            }

                                            var encounterSet = encodeURIComponent(result.title);
                                            if (this.category == "Nightmare" && result.HasNightmare) {
                                                encounterSet += "%20Nightmare";
                                            }

                                            var url = 'http://' + window.location.host + "/Cards/Search?CardType=" + cardType + "&EncounterSet=" + encounterSet;
                                            if (keyword != '') {
                                                url += '&Keyword=' + keyword;
                                            }

                                            //console.log("url: " + url);

                                            window.open(url);
                                            return false;
                                        }
                                    }
                                }
                            }
                        },
                        series: series,
                        tooltip: {
                            pointFormat: '<span style="font-size:11px;">{series.name}: {point.y}</span>'
                        }
                    });
                });
            }
        }
     </script>
}

@if (@Model.Detail != null)
{
    <h2>@Model.Detail.Title</h2>
    
    <div>
    @foreach (var questCard in @Model.Detail.QuestCards)
    {
        <div style="display:inline-block;">
        <div>
            <span>@questCard.StageNumber</span><span style="margin-left:2px;display:inline-block;"><a title="Details for @questCard.FullTitle" href="@questCard.Url">@questCard.FullTitle</a></span>
            @if (@questCard.IsNightmare)
            {
                <span>[NIGHTMARE]</span>
            }   
        </div>
        <div>
            @if (@questCard.HasSecondImage)
            {
                <span>
                    <img src="@questCard.ImagePath1" style="max-height:200px;"/>
                    <img src="@questCard.ImagePath2" style="max-height:200px;"/>
                </span>
            }
            else
            {
                <img src="@questCard.ImagePath" style="max-width:285px;max-height:400px;"/>
            }
        </div>
        </div>
    }
    </div>
    
    if (!string.IsNullOrEmpty(@Model.Detail.RulesUrl))
    {
        <h3>Rules and Errata</h3>
        <div><a title="@Model.Detail.RulesLabel" href="@Model.Detail.RulesUrl" target="_blank">Rules Sheet</a></div>
    }
    if (@Model.Detail.CampaignCard != null)
    {
        <h3>Campaign Card</h3>
        <div><a title="@Model.Detail.CampaignCard.Title" href="@Model.Detail.CampaignCard.Link"><span style="display:inline-block;width:300px;">@Model.Detail.CampaignCard.Title</span></a></div>
    }
    <div style="margin-top:16px;margin-bottom:-8px;">
        <span style="display:inline-block;width:300px;font-weight:bold;">Title</span>
        <span style="display:inline-block;margin-left:4px;width:60px;font-weight:bold;">Normal</span>
        <span style="display:inline-block;margin-left:4px;width:60px;font-weight:bold;">Easy</span>
        <span style="display:inline-block;margin-left:4px;width:60px;font-weight:bold;">Nightmare</span>
    </div>
    <h3>Quest Cards</h3>
        foreach (var questCard in @Model.Detail.QuestCards)
        {
            <div>
                <a title="@questCard.FullTitle" href="@questCard.Url"><span style="display:inline-block;width:300px;">@questCard.StageNumber - @questCard.FullTitle</span></a>
                <span style="display:inline-block;margin-left:4px;width:60px;">@questCard.NormalQuantity</span>
                <span style="display:inline-block;margin-left:4px;width:60px;">@questCard.EasyQuantity</span>
                <span style="display:inline-block;margin-left:4px;width:60px;">@questCard.NightmareQuantity</span>
            </div>
        }
        <div />
        var lastEncounterSet = string.Empty;
        foreach (var scenarioCard in @Model.Detail.ScenarioCards)
        {
            if (@lastEncounterSet != @scenarioCard.EncounterSet)
            {
                <div><h3><a title="Search for @scenarioCard.EncounterSet" href="@scenarioCard.EncounterSetLink">@scenarioCard.EncounterSet</a><img style="margin-left:4px;width:20px;height:20px;" src="@scenarioCard.EncounterSetImage" /></h3></div>
            }
            <div>
                <a title="@scenarioCard.Title" href="@scenarioCard.Link"><span style="display:inline-block;width:300px;">@scenarioCard.Title</span></a>
                <span style="display:inline-block;margin-left:4px;width:60px;">@scenarioCard.NormalQuantity</span>
                <span style="display:inline-block;margin-left:4px;width:60px;">@scenarioCard.EasyQuantity</span>
                <span style="display:inline-block;margin-left:4px;width:60px;">@scenarioCard.NightmareQuantity</span>
            </div>
    
            lastEncounterSet = scenarioCard.EncounterSet;
        }
     <div style="margin-top:40px;" id="chartContainer"></div>
}
else {
    <h2>Scenarios</h2>
    
    <div>
    @foreach (var scenarioGroup in @Model.ScenarioGroups)
    {
        <div><h3>@scenarioGroup.Name</h3></div>
        foreach (var scenario in @scenarioGroup.Scenarios)
        {
        <div>
            <a title="Details for @scenario.Title" href="@scenario.Link">@scenario.Title</a>
        </div>
        }
    }
    </div>
}