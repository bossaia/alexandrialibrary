@using HallOfBeorn.Models
@model CardViewModel

@{
    ViewBag.Title = @Model.Title;
}

<h2>@Model.Title</h2>
<div style="color:#616161;font-weight:bold;">
    <span>@Model.SetName</span><span style="margin-left:6px;">@string.Format("#{0} (x{1})", @Model.Number, @Model.Quantity)</span>
</div>
@if (!string.IsNullOrEmpty(@Model.OppositeTitle))
{
    <h3>@Model.OppositeTitle</h3>
}
    <div>
        <table>
            <tr>
                <td>
                    <img src="@Model.ImagePath" style="max-width: 285px;max-height: 400px;"/>
                </td>
                <td rowspan="2" style="vertical-align:top;">
                    <div style="margin:-8px;">
                        <table>
                            <tr>
                                <td>
                                @if (@Model.HasSphere)
                                {
                                    <img style="margin-bottom:-4px;margin-right:8px;height:24px;width:24px;" src='@string.Format("/Images/{0}.png", @Model.Sphere)' />
                                }
                                <span style="font-weight:bold;font-size:14pt;">@Model.CardTypeName</span>
                                @if (@Model.IsUnique)
                                {
                                    <span style="margin-left:6px;">(Unique)</span>
                                }
                                @*
                                @if (!string.IsNullOrEmpty(@Model.CampaignCardType))
                                {
                                    <span>(@Model.CampaignCardType)</span>
                                }*@
                                </td>
                            </tr>
                            <tr>
                                <td>
                                @switch (@Model.CardType)
                                {
                                    case CardType.Hero:
                                        {
                                            <span style="width:40px;color:#616161;">Threat Cost</span><span style="margin-left:8px;font-weight:bold;">@Model.ThreatCost</span>
                                            <span style="width:24px;margin-left:20px;"><img style="margin-bottom:-3px;" src="/Images/willpower.gif" /></span><span style="margin-left:8px;font-weight:bold;">@Model.Willpower</span>
                                            <span style="width:24px;margin-left:20px;"><img style="margin-bottom:-3px;" src="/Images/attack.gif" /></span><span style="margin-left:8px;font-weight:bold;">@Model.Attack</span>
                                            <span style="width:24px;margin-left:20px;"><img style="margin-bottom:-3px;" src="/Images/defense.gif" /></span><span style="margin-left:8px;font-weight:bold;">@Model.Defense</span>
                                            <span style="width:24px;margin-left:20px;"><img style="margin-bottom:-3px;width:16px;height:16px;" src="/Images/heart.png"/></span><span style="margin-left:8px;font-weight:bold;">@Model.HitPoints</span>
                                        }
                                        break;
                                    case CardType.Ally:
                                        {
                                            <span style="width:50px;color:#616161;">Resource Cost</span><span style="margin-left:8px;font-weight:bold;">@Model.ResourceCost</span>
                                            <span style="width:24px;margin-left:20px;"><img style="margin-bottom:-3px;" src="/Images/willpower.gif" /></span><span style="margin-left:8px;font-weight:bold;">@Model.Willpower</span>
                                            <span style="width:24px;margin-left:20px;"><img style="margin-bottom:-3px;" src="/Images/attack.gif" /></span><span style="margin-left:8px;font-weight:bold;">@Model.Attack</span>
                                            <span style="width:24px;margin-left:20px;"><img style="margin-bottom:-3px;" src="/Images/defense.gif" /></span><span style="margin-left:8px;font-weight:bold;">@Model.Defense</span>
                                            <span style="width:24px;margin-left:20px;"><img style="margin-bottom:-3px;width:16px;height:16px;" src="/Images/heart.png"/></span><span style="margin-left:8px;font-weight:bold;">@Model.HitPoints</span>
                                        }
                                        break;
                                    case CardType.Attachment:
                                        {
                                            <span style="width:50px;color:#616161;">Resource Cost</span><span style="margin-left:8px;font-weight:bold;">@Model.ResourceCost</span>
                                        }
                                        break;
                                    case CardType.Event:
                                        {
                                            <span style="width:50px;color:#616161;">Resource Cost</span><span style="margin-left:8px;font-weight:bold;">@Model.ResourceCost</span>
                                        }
                                        break;
                                    case CardType.Enemy:
                                        {
                                            <span style="width:60px;color:#616161;">Engagement Cost</span><span style="margin-left:8px;font-weight:bold;">@Model.EngagementCost</span>
                                            <span style="width:24px;margin-left:20px;"><img style="margin-bottom:-3px;" src="/Images/threat.png" /></span><span style="margin-left:8px;font-weight:bold;">@Model.Threat</span>
                                            <span style="width:24px;margin-left:20px;"><img style="margin-bottom:-3px;" src="/Images/attack.gif" /></span><span style="margin-left:8px;font-weight:bold;">@Model.Attack</span>
                                            <span style="width:24px;margin-left:20px;"><img style="margin-bottom:-3px;" src="/Images/defense.gif" /></span><span style="margin-left:8px;font-weight:bold;">@Model.Defense</span>
                                            <span style="width:24px;margin-left:20px;"><img style="margin-bottom:-3px;width:16px;height:16px;" src="/Images/heart.png"/></span><span style="margin-left:8px;font-weight:bold;">@Model.HitPoints</span>
                                        }
                                        break;
                                    case CardType.Location:
                                        {
                                            <span style="width:60px;color:#616161;">Quest Points</span><span style="margin-left:8px;font-weight:bold;">@Model.QuestPoints</span>
                                            <span style="width:24px;margin-left:20px;"><img style="margin-bottom:-3px;" src="/Images/threat.png" /></span><span style="margin-left:8px;font-weight:bold;">@Model.Threat</span>
                                        }
                                        break;
                                    case CardType.Treachery:
                                        {
                                        }
                                        break;
                                    case CardType.Objective_Ally:
                                    case CardType.Objective:
                                        {
                                            if (@Model.HasCharacterStats)
                                            {
                                                <span style="width:24px;"><img style="margin-bottom:-3px;" src="/Images/willpower.gif" /></span><span style="margin-left:8px;font-weight:bold;">@Model.Willpower</span>
                                                <span style="width:24px;margin-left:20px;"><img style="margin-bottom:-3px;" src="/Images/attack.gif" /></span><span style="margin-left:8px;font-weight:bold;">@Model.Attack</span>
                                                <span style="width:24px;margin-left:20px;"><img style="margin-bottom:-3px;" src="/Images/defense.gif" /></span><span style="margin-left:8px;font-weight:bold;">@Model.Defense</span>
                                                <span style="width:24px;margin-left:20px;"><img style="margin-bottom:-3px;width:16px;height:16px;" src="/Images/heart.png"/></span><span style="margin-left:8px;font-weight:bold;">@Model.HitPoints</span>
                                            }
                                            else
                                            {
                                            }
                                        }
                                        break;
                                    case CardType.Quest:
                                        {
                                            <span style="width:50px;color:#616161;">Quest Points</span><span style="margin-left:8px;font-weight:bold;">@Model.QuestPoints</span>
                                        }
                                        break;
                                    case CardType.Treasure:
                                        {
                                            <span style="width:50px;color:#616161;">Resource Cost</span><span style="margin-left:8px;font-weight:bold;">@Model.ResourceCost</span>
                                        }
                                        break;
                                    case CardType.Nightmare:
                                        {
                                        }
                                        break;
                                    case CardType.Campaign:
                                        {
                                        }
                                        break;
                                    case CardType.Burden:
                                        {
                                        }
                                        break;
                                    default:
                                        break;
                                }
                                </td>
                            </tr>
                        </table>
                        <br />
                        <div style="margin:2px;padding-top:0px;padding-left:6px;padding-right:6px;border: 1px solid gray;border-radius:4px;">

                        @if (@Model.Traits.Count() > 0)
                        {
                            <div style="text-align:center;">
                            @foreach (var trait in Model.Traits)
                            {
                                <b><i>@trait</i></b> @: &nbsp;
                            }
                            </div>
                        }
                        @if (@Model.Keywords.Count() > 0)
                        {
                            <span style="margin-left:6px;">
                            @foreach (var keyword in Model.KeywordEffects)
                            {
                                foreach (var token in keyword.Tokens)
                                {
                                    if (token.IsTrait)
                                    {
                                        <b><i>@token.Text</i></b>
                                
                                        if (token.HasSuffix)
                                        {
                                            @: @token.Suffix
                                        }
                                    }
                                    else if (token.IsIcon)
                                    {
                                        if (token.HasSuffix)
                                        {
                                            <img src="@token.ImagePath" style="height:16px;margin-left:2px;margin-right:-4px;margin-bottom:-2px;" />
                                            @: @token.Suffix
                                        }
                                        else
                                        {
                                            <img src="@token.ImagePath" style="height:16px;margin-left:2px;margin-right:2px;margin-bottom:-2px;" />
                                        }
                                    }
                                    else
                                    {
                                        @: @token.Text
                                    }
                                }
                            }
                            @*
                            @foreach (var keyword in Model.Keywords)
                            {
                                @keyword @: &nbsp;
                            }*@
                            </span>
                            <br />
                        }

                        <div style="padding:4px;">
                            @if (@Model.TextEffects.Count() > 0)
                            {
                                foreach (var effect in Model.TextEffects)
                                {    
                                    foreach (var token in effect.Tokens)
                                    {
                                        if (token.IsTrigger || effect.IsCritical)
                                        {
                                            <b>@token.Text</b>
                                        }
                                        else if (token.IsTrait)
                                        {
                                            <b><i>@token.Text</i></b>
                                
                                            if (token.HasSuffix)
                                            {
                                                @: @token.Suffix
                                            }
                                        }
                                        else if (token.IsIcon)
                                        {
                                            if (token.HasSuffix)
                                            {
                                                if (token.HasPrefix)
                                                {
                                                    <span style="margin-right:-6px;">@token.Prefix</span>
                                                }
                                                
                                                <img src="@token.ImagePath" style="height:16px;margin-left:2px;margin-right:-4px;margin-bottom:-2px;" />
                                                @: @token.Suffix
                                            }
                                            else
                                            {
                                                <img src="@token.ImagePath" style="height:16px;margin-left:2px;margin-right:2px;margin-bottom:-2px;" />
                                            }
                                        }
                                        else
                                        {
                                            @: @token.Text
                                        }
                                    }
                                            
                                    <br />
                                    <br />
                                }
                            }
                            
                            @if (@Model.ShadowEffects.Count() > 0)
                            {
                                <hr style="margin-left:24px;margin-right:24px;"/>
                                
                                foreach (var effect in Model.ShadowEffects)
                                {
                                    foreach (var token in effect.Tokens)
                                    {
                                        if (token.IsTrigger)
                                        {
                                            <b>@token.Text</b>
                                        }
                                        else if (token.IsTrait)
                                        {
                                            <b><i>@token.Text</i></b>
                                
                                            if (token.HasSuffix)
                                            {
                                                @: @token.Suffix
                                            }
                                        }
                                        else if (token.IsIcon)
                                        {
                                            if (token.HasSuffix)
                                            {
                                                <img src="@token.ImagePath" style="height:16px;margin-left:2px;margin-right:-4px;margin-bottom:-2px;" />
                                                @: @token.Suffix
                                            }
                                            else
                                            {
                                                <img src="@token.ImagePath" style="height:16px;margin-left:2px;margin-right:2px;margin-bottom:-2px;" />
                                            }
                                        }
                                        else
                                        {
                                            @: @token.Text
                                        }
                                    }
                                }
                            }

                            @if (!string.IsNullOrEmpty(@Model.VictoryPoints))
                            {
                                <br />
                                <span style="text-align:right;"><b>@Model.VictoryPoints</b></span>
                            }
                        </div>

                        @if (@Model.HasFlavorText || @Model.HasOppositeFlavorText)
                        {
                            <br />
                        
                        <p style="text-align:center;">
                            @if (@Model.HasFlavorText)
                            {
                                foreach (var line in @Model.FlavorText)
                                {
                                    <i>@line</i><br />
                                }
                            }
                            @if (@Model.HasOppositeFlavorText)
                            {
                                if (@Model.HasFlavorText)
                                {
                                    <br />
                                    <br />
                                }
                                
                                foreach (var line in @Model.OppositeFlavorText)
                                {
                                    <i>@line</i><br />
                                }
                            }
                        </p>
                        }
                        </div>
                    </div>

                    @if (@Model.Decks.Count > 0)
                    {
                        <br />
                        <div style="margin-bottom:12px;">Featured Decks</div>
                        <div>
                        @*<ul style="list-style-type:none">*@
                        @foreach (var deck in @Model.Decks)
                        {
                            @*<li>*@
                            <a title="@deck.Name" href="@deck.Url" target="_blank">@deck.Name</a>
                            <br />
                            @*</li>*@
                        }
                        @*</ul>*@
                        </div>
                    }
                </td>
            </tr>
            <tr>
                <td style="vertical-align:top;text-align:center;"><a href="@Model.BlogSearchUrl" target="_blank" title="Articles related to: @Model.Title">Related Articles</a></td>
            </tr>
            @*<tr>
                <td><a href="@Model.BlogTagUrl" target="_blank" title="Tags related to: @Model.Title">Related Tags</a></td>
            </tr>*@
        </table>
    </div>
