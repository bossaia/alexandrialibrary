@using HallOfBeorn.Models
@model SearchViewModel

@{
    ViewBag.Title = "Lord of the Rings: The Card Game - Search";
}

@section scripts {
<script type="text/javascript">
    $(document).ready(function () {
        $('#resetButton').click(function () {
            $('#Query').focus().val('');
            $('#CardSet').val('Any');
            $('#CardType').val('Any');
            $('#Sphere').val('Any');
            $('#Cost').val('Any');
            $('#IsUnique').val('Any');
            $('#Trait').val('Any');
            $('#Keyword').val('Any');
            $('#Artist').val('Any');
            $('#EncounterSet').val('Any');
            $('#Category').val('Any');
            $('#EncounterCategory').val('Any');
            $('#Sort').val('Any');
            $('#VictoryPoints').val('Any');
            //$('#Custom').attr('checked', false);
        });
    });
</script>
<script type="text/javascript" src="~/Scripts/autocomplete.js"></script>
<script type="text/javascript">
    $(function () {
        $("#Query").autocomplete({
            source: autocompleteSource,
            minLength: 2
        });
        $("#Query").autocomplete("widget").addClass("autocompleteClass");
    });
</script>    
}

<h2>Search</h2>

@using (Html.BeginForm("Search", "Cards", FormMethod.Post))
{
    <div class="form-group">
        <div style="margin-bottom:10px;">
            <div style="display:inline-block;min-width:300px;margin-right:4px;">@Html.TextBoxFor(x => x.Query, new { style = "text-align:left;width:95%;margin-right:4px;" })</div>
            <div style="display:inline-block;">
                <input type="submit" value="Search" style="margin-left:6px;border-radius:8px;background-color:lightgray;" />
                <a id="resetButton" href="#" style="margin-left:6px;margin-right:28px;width:70px;">Clear</a>
                <span style="display:inline-block;">
                <span class="search-label-right">Sort</span>
                @Html.DropDownListFor(x => x.Sort, SearchViewModel.Sorts, new { @class = "search-select-short" })
                </span>
            </div>
        </div>
        
        <div class="search-row">
            <div class="search-section">Set</div>
            <div class="search-items">
                <span class="search-filter">
                <span class="search-label-short">Card Set</span>
                @Html.DropDownListFor(x => x.CardSet, SearchViewModel.CardSets, new { @class = "search-select" })
                </span>

                <span class="search-filter">
                <span class="search-label-short" title="Scenario">Scenario</span>
                @Html.DropDownListFor(x => x.Scenario, SearchViewModel.Scenarios, new { @class = "search-select" })
                </span>

                <span class="search-filter">
                <span class="search-label-short">Encounter</span>
                @Html.DropDownListFor(x => x.EncounterSet, SearchViewModel.EncounterSets, new { @class = "search-select" })
                </span>
            </div>
        </div>

        <div class="search-row">
            <div class="search-section">Type</div>
            <div class="search-items">
                <div class="search-sub-section">
                    <span class="search-filter">
                    <span class="search-label-short" title="Deck Type">Deck Type</span>
                    @Html.DropDownListFor(x => x.DeckType, SearchViewModel.DeckTypes, new { @class = "search-select" })
                    </span>

                    <span class="search-filter">
                    <span class="search-label-short">Card Type</span>
                    @Html.DropDownListFor(x => x.CardType, SearchViewModel.CardTypes, new { @class = "search-select" })
                    </span>

                    <span class="search-filter">
                    <span class="search-label-short" title="Card Subtype">Subtype</span>
                    @Html.DropDownListFor(x => x.CardSubtype, SearchViewModel.CardSubtypes, new { @class = "search-select-short" })
                    </span>
                </div>
                <div class="search-sub-section">
                    <span class="search-filter">
                    <span class="search-label-short">Sphere</span>
                    @Html.DropDownListFor(x => x.Sphere, SearchViewModel.Spheres, new { @class = "search-select" })
                    </span>

                    <span class="search-filter">
                    <span class="search-label-short">Unique</span>
                    @Html.DropDownListFor(x => x.IsUnique, SearchViewModel.UniquenessValues, new { @class = "search-select" })
                    </span>

                    <span class="search-filter">
                    <span class="search-label-short">Set Type</span>
                    @Html.DropDownListFor(x => x.SetType, SearchViewModel.SetTypeValues, new { @class = "search-select" })
                    </span>
                </div>
            </div>
        </div>

        <div class="search-row">
            <div class="search-section">Text</div>
            <span class="search-filter">
            <span class="search-label-short">Trait</span>
            @Html.DropDownListFor(x => x.Trait, SearchViewModel.Traits, new { @class = "search-select" })
            </span>

            <span class="search-filter">
            <span class="search-label-short">Keyword</span>
            @Html.DropDownListFor(x => x.Keyword, SearchViewModel.Keywords, new { @class = "search-select" })
            </span>

            <span class="search-filter">
            <span class="search-label-short">Victory</span>
            @Html.DropDownListFor(x => x.VictoryPoints, SearchViewModel.VictoryPointValues, new { @class = "search-select-short" })
            </span>
        </div>

        <div class="search-row">
            <div class="search-section">Cost</div>
            <div class="search-items">
                <span class="search-filter">
                <span class="search-label-long">Resource Cost</span>
                @Html.DropDownListFor(x => x.Cost, SearchViewModel.ResourceCosts, new { @class = "search-select-short" })
                </span>

                <span class="search-filter">
                <span class="search-label-long">Threat Cost</span>
                @Html.DropDownListFor(x => x.ThreatCost, SearchViewModel.ThreatCosts, new { @class = "search-select-short" })
                </span>

                <span class="search-filter">
                <span class="search-label-long">Engagement Cost</span>
                @Html.DropDownListFor(x => x.EngagementCost, SearchViewModel.EngagementCosts, new { @class = "search-select-short" })
                </span>
            </div>
        </div>

        <div class="search-row">
            <div class="search-section">Category</div>
            <div class="search-items">
                <span class="search-filter">
                <span class="search-label-short" title="Player Card Category">Player</span>
                @Html.DropDownListFor(x => x.Category, SearchViewModel.Categories, new { @class = "search-select" })
                </span>

                <span class="search-filter">
                <span class="search-label-short" title="Encounter Card Category">Encounter</span>
                @Html.DropDownListFor(x => x.EncounterCategory, SearchViewModel.EncounterCategories, new { @class = "search-select" })
                </span>

                <span class="search-filter">
                <span class="search-label-short" title="Quest Card Category">Quest</span>
                @Html.DropDownListFor(x => x.QuestCategory, SearchViewModel.QuestCategories, new { @class = "search-select" })
                </span>
            </div>
        </div>

        <div class="search-row">
            <div class="search-section">Details</div>
            <div class="search-items">
                <span class="search-filter">
                <span class="search-label-short">Artist</span>
                @Html.DropDownListFor(x => x.Artist, SearchViewModel.Artists, new { @class = "search-select" })
            </span>
            </div>
            
        </div>
    </div>
    @*
    <div style="margin-top:8px;" onclick="$(document).ready(function () { $('#advancedSearch').toggle(); });">Advanced Search</div>*@
    @*<img src="/Images/close-button.png" onclick="@string.Format("$(document).ready(function () {{ $('#filterContainer_{0}').toggle(); }});", i)"/>*@
    @*
    <div id="advancedSearch">
            <hr />
          
            <div id='filter1'>

            <span style="display:inline-block;">
            <span style="margin-right:2px;width:55px;display:inline-block;">Search</span>
            @Html.TextBoxFor(x => x.Filter1Query, new { style = "margin-right:2px;" })
            </span>
            
            <span style="display:inline-block;">
            <span style="margin-right:2px;width:55px;display:inline-block;">Set</span>
            @Html.DropDownListFor(x => x.Filter1CardSet, SearchViewModel.CardSets, new { style = "margin-right:12px;max-width:170px;" })
            </span>

            <span style="display:inline-block;">
            <span style="margin-right:2px;width:55px;display:inline-block;">Type</span>
            @Html.DropDownListFor(x => x.Filter1CardType, SearchViewModel.CardTypes, new { style = "margin-right:12px;" })
            </span>
            </div>

            <div id='filter2'>

            <span style="display:inline-block;">
            <span style="margin-right:2px;width:55px;display:inline-block;">Search</span>
            @Html.TextBoxFor(x => x.Filter2Query, new { style = "margin-right:2px;" })
            </span>
            
            <span style="display:inline-block;">
            <span style="margin-right:2px;width:55px;display:inline-block;">Set</span>
            @Html.DropDownListFor(x => x.Filter2CardSet, SearchViewModel.CardSets, new { style = "margin-right:12px;max-width:170px;" })
            </span>

            <span style="display:inline-block;">
            <span style="margin-right:2px;width:55px;display:inline-block;">Type</span>
            @Html.DropDownListFor(x => x.Filter2CardType, SearchViewModel.CardTypes, new { style = "margin-right:12px;" })
            </span>
            </div>
    </div>*@
}

<div ">
@foreach (var card in @Model.Cards)
{
    <hr style="color:#616161;" />
    <div style="margin:6px;border: 0px solid gray;border-radius: 8px;min-height:220px;">
        <div>
            <div style="display:inline-block;">
                <div style="margin-bottom:2px;">
                @if (@card.IsUnique)
                {
                    <img src="/Images/unique-card.png" style="margin-bottom:-3px;margin-right:-4px;height:16px;width:16px;"/>
                }
                @Html.ActionLink(@card.FullTitle, "Details", new { id = @card.Slug }, new { style = "margin-bottom:2px;font-size:medium;font-weight:bold;display:inline-block;" })
            
            
                </div>
                <div>
                    <span style="display:inline-block;color:#616161;">@card.SetName</span>
                </div>
            </div>
            <div style="display:inline-block;">
                @if (@card.HasSphere)
                {
                    <span><img style="width:30px;height:30px;margin-bottom:4px;margin-left:6px;margin-right:1px;" src='@string.Format("/Images/{0}.png", @card.Sphere)' /></span>
                }
                @if (@card.HasEncounterSet)
                {
                    <span><img style="width:30px;height:30px;margin-bottom:4px;margin-left:6px;margin-right:1px;" src='@card.EncounterSetImagePath' /></span>
                }
            </div>
        </div>
        
        <div style="float:left;margin-right:4px;">
            <a href="@Href(string.Format("/Cards/Details/{0}", @card.Slug))">
                @if (@card.HasSecondImage)
                {
                    <span style="text-align:left;">
                        <img src="@card.ImagePath1" style="height:180px;"/>
                        <img src="@card.ImagePath2" style="height:180px;margin-left:4px;"/>
                    </span>
                }
                else
                {
                <img src="@card.ImagePath" style="height:180px;"/>
                }
            </a>
        </div>
        
        <div style="display:inline-block;margin-left:4px;min-width:30px;">
            @switch (@card.CardType)
            {
                case CardType.Hero:
                    <span style="color:#616161;">(</span><span style="margin-left:4px;margin-right:4px;font-weight:bold;">@card.ThreatCost</span><span style="color:#616161;">)</span>
                    <span style="width:24px;margin-left:14px;"><span style="margin-right:2px;font-weight:bold;">@card.Willpower</span><img style="margin-bottom:-3px;" src="/Images/willpower.gif" /></span>
                    <span style="width:24px;margin-left:14px;"><span style="margin-right:2px;font-weight:bold;">@card.Attack</span><img style="margin-bottom:-3px;" src="/Images/attack.gif" /></span>
                    <span style="width:24px;margin-left:14px;"><span style="margin-right:2px;font-weight:bold;">@card.Defense</span><img style="margin-bottom:-3px;" src="/Images/defense.gif" /></span>
                    <span style="width:24px;margin-left:14px;"><span style="margin-right:2px;font-weight:bold;">@card.HitPoints</span><img style="margin-bottom:-4px;margin-left:-4px;width:20px;height:20px;" src="/Images/heart.png"/></span>
                    break;
                case CardType.Ally:
                    <span style="color:#616161;">(</span><span style="margin-left:4px;margin-right:4px;font-weight:bold;">@card.ResourceCost</span><span style="color:#616161;">)</span>
                    <span style="width:24px;margin-left:14px;"><span style="margin-right:2px;font-weight:bold;">@card.Willpower</span><img style="margin-bottom:-3px;" src="/Images/willpower.gif" /></span>
                    <span style="width:24px;margin-left:14px;"><span style="margin-right:2px;font-weight:bold;">@card.Attack</span><img style="margin-bottom:-3px;" src="/Images/attack.gif" /></span>
                    <span style="width:24px;margin-left:14px;"><span style="margin-right:2px;font-weight:bold;">@card.Defense</span><img style="margin-bottom:-3px;" src="/Images/defense.gif" /></span>
                    <span style="width:24px;margin-left:14px;"><span style="margin-right:2px;font-weight:bold;">@card.HitPoints</span><img style="margin-bottom:-4px;margin-left:-4px;width:20px;height:20px;" src="/Images/heart.png"/></span>
                    break;
                case CardType.Attachment:
                    <span style="width:50px;color:#616161;">(</span><span style="margin-left:4px;margin-right:4px;font-weight:bold;">@card.ResourceCost</span><span style="color:#616161;">)</span>
                    break;
                case CardType.Event:
                    <span style="width:50px;color:#616161;">(</span><span style="margin-left:4px;margin-right:4px;font-weight:bold;">@card.ResourceCost</span><span style="color:#616161;">)</span>
                    break;
                case CardType.Treasure:
                    <span style="width:50px;color:#616161;">(</span><span style="margin-left:4px;margin-right:4px;font-weight:bold;">@card.ResourceCost</span><span style="color:#616161;">)</span>
                    break;
                case CardType.Enemy:
                    <span style="color:#616161;">(</span><span style="margin-left:4px;margin-right:4px;font-weight:bold;">@card.EngagementCost</span><span style="color:#616161;">)</span>
                    <span style="width:24px;margin-left:14px;"><span style="margin-right:2px;font-weight:bold;">@card.Threat</span><img style="margin-bottom:-3px;" src="/Images/threat.png" /></span>
                    <span style="width:24px;margin-left:14px;"><span style="margin-right:2px;font-weight:bold;">@card.Attack</span><img style="margin-bottom:-3px;" src="/Images/attack.gif" /></span>
                    <span style="width:24px;margin-left:14px;"><span style="margin-right:2px;font-weight:bold;">@card.Defense</span><img style="margin-bottom:-3px;" src="/Images/defense.gif" /></span>
                    <span style="width:24px;margin-left:14px;"><span style="margin-right:2px;font-weight:bold;">@card.HitPoints</span><img style="margin-bottom:-4px;margin-left:-4px;width:20px;height:20px;" src="/Images/heart.png"/></span>
                    break;
                case CardType.Location:
                    <span style="width:24px;"><span style="margin-right:2px;font-weight:bold;">@card.Threat</span><img style="margin-bottom:-3px;" src="/Images/threat.png" /></span>
                    <span style="width:60px;margin-left:14px;color:#616161;">(</span><span style="margin-left:4px;margin-right:4px;font-weight:bold;">@card.QuestPoints</span><span style="width:60px;color:#616161;">)</span>
                    break;
                case CardType.Objective:
                case CardType.Objective_Ally:
                    if (@card.CardType == CardType.Objective_Ally || @card.HasCharacterStats)
                    {
                    <span style="width:24px;"><span style="margin-right:2px;font-weight:bold;">@card.Willpower</span><img style="margin-bottom:-3px;" src="/Images/willpower.gif" /></span>
                    <span style="width:24px;margin-left:14px;"><span style="margin-right:2px;font-weight:bold;">@card.Attack</span><img style="margin-bottom:-3px;" src="/Images/attack.gif" /></span>
                    <span style="width:24px;margin-left:14px;"><span style="margin-right:2px;font-weight:bold;">@card.Defense</span><img style="margin-bottom:-3px;" src="/Images/defense.gif" /></span>
                    <span style="width:24px;margin-left:14px;"><span style="margin-right:2px;font-weight:bold;">@card.HitPoints</span><img style="margin-bottom:-4px;margin-left:-4px;width:20px;height:20px;" src="/Images/heart.png"/></span>
                    }
                    break;
                case CardType.Quest:
                    <span style="margin-left:4px;font-weight:bold;">@card.StageNumber</span><span style="width:40px;margin-left:2px;color:#616161;font-size:10px;font-weight:bold;">A-B</span>
                    <span style="width:40px;margin-left:14px;color:#616161;">(</span><span style="margin-left:4px;margin-right:4px;font-weight:bold;">@card.QuestPoints</span><span style="width:40px;color:#616161;">)</span>
                    break;
                default:
                    break;
            }
        </div>
        <div style="margin-left:2px;vertical-align:top;text-align:left;">
            @foreach (var trait in card.Traits)
            {
                <i>@trait</i> @: &nbsp;
            }
            <br />
            @foreach (var keyword in card.Keywords)
            {
                @keyword @: &nbsp;
            }
            @if (!string.IsNullOrEmpty(@card.Text))
            {
                <div>@card.Text</div>
            }
            @if (!string.IsNullOrEmpty(@card.OppositeText))
            {
                <hr style="margin-left:24px;margin-right:24px;"/>
                <div>@card.OppositeText</div>
            }
            @if (!string.IsNullOrEmpty(@card.Shadow))
            {
                <hr style="margin-left:24px;margin-right:24px;"/>    
                <div>@card.Shadow</div>
            }
        </div>
    </div>
}
</div>