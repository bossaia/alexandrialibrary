@using HallOfBeorn.Models
@model SearchViewModel

@{
    ViewBag.Title = "Search";
}

<h2>Search</h2>

@using (Html.BeginForm("Search", "Cards", FormMethod.Post))
{
    <div class="form-group">
        @Html.TextBoxFor(x => x.Query)
        <input type="submit" value="Search" />

        <div>
            @*<label>Advanced Search</label>*@
            <br />
            @Html.LabelFor(x => x.CardType, new { style="display:inline;"})
            @Html.DropDownListFor(x => x.CardType, SearchViewModel.CardTypes)

            @Html.LabelFor(x => x.CardSet, new { style="display:inline;"})
            @Html.DropDownListFor(x => x.CardSet, SearchViewModel.CardSets)

            @Html.LabelFor(x => x.Sphere, new { style = "display:inline;"})
            @Html.DropDownListFor(x => x.Sphere, SearchViewModel.Spheres)

            @Html.LabelFor(x => x.Cost, new { style = "display:inline;"})
            @Html.DropDownListFor(x => x.Cost, SearchViewModel.Costs)
            <br />
            <br />
            @Html.LabelFor(x => x.Trait, new { style = "display:inline;"})
            @Html.DropDownListFor(x => x.Trait, SearchViewModel.Traits)

            @Html.LabelFor(x => x.Keyword, new { style = "display:inline;"})
            @Html.DropDownListFor(x => x.Keyword, SearchViewModel.Keywords)
            <br />
            <br />
        </div>
        <br />
        <br />
    </div>
}

@foreach (var card in @Model.Cards)
{
    <div>
        <table>
            <tr>
                <td rowspan="2">
                    <img src="@card.ImagePath" style="height:160px;"/>
                </td>
                <td style="min-width:100px">
                    <h3>@Html.ActionLink(@card.Title, "Details", new { id = @card.Id })</h3>
                </td>
            </tr>
            <tr>
                <td>
                    <div>
                        <p>
                            @foreach (var trait in card.Traits)
                            {
                                @trait @: &nbsp; &nbsp;
                            }
                            <br />
                            @foreach (var keyword in card.Keywords)
                            {
                                @keyword @: &nbsp; &nbsp;
                            }
                            <br />
                            @card.Text

                            @*
                            @if (!string.IsNullOrEmpty(@card.OppositeText))
                            {
                                <br />
                                @card.OppositeText
                            }*@
                        </p>
                    </div>
                </td>
            </tr>
        </table>
    </div>
}
